   1               		.file	"main.cpp"
   2               	__SP_H__ = 0x3e
   3               	__SP_L__ = 0x3d
   4               	__SREG__ = 0x3f
   5               	__tmp_reg__ = 0
   6               	__zero_reg__ = 1
   7               		.text
   8               	.Ltext0:
   9               		.cfi_sections	.debug_frame
  10               	.global	_Z24Timer_1_Compare_ISR_initv
  12               	_Z24Timer_1_Compare_ISR_initv:
  13               	.LFB13:
  14               		.file 1 "main.cpp"
   1:main.cpp      **** #include <avr/io.h>
   2:main.cpp      **** #include <util/delay.h>
   3:main.cpp      **** #include <stdio.h>
   4:main.cpp      **** #include <string.h>
   5:main.cpp      **** 
   6:main.cpp      **** #include "VoltageStatistics.h"
   7:main.cpp      **** #include "ATMega32_utility_bib.h"
   8:main.cpp      **** #include "can.h"
   9:main.cpp      **** 
  10:main.cpp      **** 
  11:main.cpp      **** void Timer_1_Compare_ISR_init();
  12:main.cpp      **** 
  13:main.cpp      **** volatile uint32_t Zeitstempel=0;
  14:main.cpp      **** volatile uint32_t Zeitstempel_100ms=0;
  15:main.cpp      **** volatile bool flag_100ms=false;
  16:main.cpp      **** 
  17:main.cpp      **** 
  18:main.cpp      **** int main ()
  19:main.cpp      **** {
  20:main.cpp      **** 	DDRC = 0xFF;			// LED-Port: output
  21:main.cpp      **** 	PORTC = 0x00;			// LEDs ein
  22:main.cpp      ****     _delay_ms(100);
  23:main.cpp      ****     PORTC = 0xFF;            // LEDs aus
  24:main.cpp      ****     VoltageStatistics V;
  25:main.cpp      **** 	USART UART(8,0,1,57600);	// USART init 8 Zeichenbits , keien Paritätsbits , 1 Stoppbit, 9600 Zeic
  26:main.cpp      **** 	can_init(BITRATE_500_KBPS);      // CAN init 500 kbit/s
  27:main.cpp      ****     char buffer[100];		// Buffer zur Zwschischenspeicherung von Zeichenketten
  28:main.cpp      **** 	
  29:main.cpp      ****    	can_t sendmsg_activ;    // Message-Objekt auf dem Stack anlegen
  30:main.cpp      **** 	      sendmsg_activ.id= 0x33;
  31:main.cpp      **** 		  sendmsg_activ.flags.rtr=0;
  32:main.cpp      **** 		  sendmsg_activ.length=2;
  33:main.cpp      **** 	can_t sendmsg_nactiv;    // Message-Objekt auf dem Stack anlegen
  34:main.cpp      **** 	      sendmsg_nactiv.id= 0x32;
  35:main.cpp      **** 		  sendmsg_nactiv.flags.rtr=0;
  36:main.cpp      **** 		  sendmsg_nactiv.length=0;
  37:main.cpp      **** 
  38:main.cpp      ****           
  39:main.cpp      **** 	sprintf(buffer,"Probepruefung Teil 2\n\r\n\r");	// Zeichenkette erzeugen und in dn Zwischenspeiche
  40:main.cpp      **** 	UART.UsartPuts(buffer);		   // Ausgabe
  41:main.cpp      **** 	
  42:main.cpp      **** 	_delay_ms(500);
  43:main.cpp      **** 	
  44:main.cpp      **** 	Timer_1_Compare_ISR_init(); // Timer 1 init und start
  45:main.cpp      ****     
  46:main.cpp      **** 	uint16_t lastValueMilliVolt=0;
  47:main.cpp      **** 	uint8_t cnt=0;
  48:main.cpp      **** 	while (1)
  49:main.cpp      **** 	{
  50:main.cpp      **** 	    
  51:main.cpp      **** 		if(flag_100ms==true){
  52:main.cpp      **** 		cli();
  53:main.cpp      ****         Zeitstempel_100ms=(Zeitstempel*100);
  54:main.cpp      ****         sei();
  55:main.cpp      **** 		cnt++;
  56:main.cpp      **** 		flag_100ms=false;
  57:main.cpp      ****         lastValueMilliVolt= (V.convertMilliVoltage(V.readValue(6)));
  58:main.cpp      **** 		V.addValue(lastValueMilliVolt);
  59:main.cpp      **** 		if((lastValueMilliVolt<500)&&(cnt%2==0))
  60:main.cpp      **** 		{
  61:main.cpp      ****           V.sendCanMessages(false,&sendmsg_nactiv,lastValueMilliVolt,Zeitstempel_100ms);  
  62:main.cpp      ****         }   
  63:main.cpp      ****          if((lastValueMilliVolt>=500))
  64:main.cpp      **** 		{
  65:main.cpp      ****           V.sendCanMessages(true,&sendmsg_activ,lastValueMilliVolt,Zeitstempel_100ms);
  66:main.cpp      **** 		}
  67:main.cpp      **** 		if(cnt%10==0)
  68:main.cpp      **** 		{
  69:main.cpp      **** 		  TGL_BIT(LED_PORT,3);
  70:main.cpp      **** 		  V.showStatistics();
  71:main.cpp      **** 		  cnt=0;
  72:main.cpp      **** 
  73:main.cpp      **** 		}
  74:main.cpp      **** 		}
  75:main.cpp      **** 	
  76:main.cpp      **** 	}
  77:main.cpp      **** 	return 0;
  78:main.cpp      **** }
  79:main.cpp      **** 
  80:main.cpp      **** 
  81:main.cpp      **** // Init Timer1 Compare ISR
  82:main.cpp      **** // Vorteiler = 1024 , OCR1 = xx => 100ms pro Überlauf
  83:main.cpp      **** // 16MHZ / 1024 = 15,625 kHz  1/15,625 khz = 64 us = 0,064ms
  84:main.cpp      **** // bei 65536 Schritten 4,19 Sekunden
  85:main.cpp      **** // 100ms / 0,064 ms = 1562,5 Schritte => Zähler zählt bis 1562 => 99,97ms 
  86:main.cpp      **** // 2. Vorteiler 256
  87:main.cpp      **** // 16MHZ/ 256 = 62,5 kHz 1/ 62,5kHz= 16uS = 0,016 ms
  88:main.cpp      **** // 100ms / 0,016ms = 6250 Schritte = 100ms
  89:main.cpp      **** 
  90:main.cpp      **** void Timer_1_Compare_ISR_init()
  91:main.cpp      **** {
  15               		.loc 1 91 1 view -0
  16               		.cfi_startproc
  17               	/* prologue: function */
  18               	/* frame size = 0 */
  19               	/* stack size = 0 */
  20               	.L__stack_usage = 0
  92:main.cpp      ****     // Timer1 initialisieren
  93:main.cpp      ****   	// Zählerstandsregister zurücksetzen
  94:main.cpp      ****   	TCNT1 = 0;// Startwert
  21               		.loc 1 94 4 view .LVU1
  22               		.loc 1 94 10 is_stmt 0 view .LVU2
  23 0000 1DBC      		out 0x2c+1,__zero_reg__
  24 0002 1CBC      		out 0x2c,__zero_reg__
  95:main.cpp      ****   	// Vergleichsregister setzen
  96:main.cpp      ****   	OCR1A  = 6250-1; // => Zähler zählt bis 6250 => 100ms 
  25               		.loc 1 96 4 is_stmt 1 view .LVU3
  26               		.loc 1 96 11 is_stmt 0 view .LVU4
  27 0004 89E6      		ldi r24,lo8(105)
  28 0006 98E1      		ldi r25,lo8(24)
  29 0008 9BBD      		out 0x2a+1,r25
  30 000a 8ABD      		out 0x2a,r24
  97:main.cpp      ****   	
  98:main.cpp      ****   	// Konfigurationsregister:
  99:main.cpp      ****   	// WGM1 = Toggle OC1A on Compare Match;
 100:main.cpp      ****   	// COM1 =Toggle OC1A on Compare Match;
 101:main.cpp      ****   	// CS1 = Vorteiler 256
 102:main.cpp      **** 	TCCR1A = (0<<COM1A1) | (1<<COM1A0) | (0<<COM1B1) | (0<<COM1B0) | (0<<FOC1A) | (0<<FOC1B) | (0<<WGM
  31               		.loc 1 102 2 is_stmt 1 view .LVU5
  32               		.loc 1 102 9 is_stmt 0 view .LVU6
  33 000c 80E4      		ldi r24,lo8(64)
  34 000e 8FBD      		out 0x2f,r24
 103:main.cpp      ****     TCCR1B = (0<<ICNC1) | (0<<ICES1) | (0<<WGM13) | (1<<WGM12) | (1<<CS12) | (0<<CS11) | (0<<CS10);
  35               		.loc 1 103 5 is_stmt 1 view .LVU7
  36               		.loc 1 103 12 is_stmt 0 view .LVU8
  37 0010 8CE0      		ldi r24,lo8(12)
  38 0012 8EBD      		out 0x2e,r24
 104:main.cpp      **** 	
 105:main.cpp      **** 	//Interruptmaskenregister setzen
 106:main.cpp      **** 	//COIE1A = INT auslösen bei Überlauf Timer1 aktiv
 107:main.cpp      **** 	TIMSK=(1<<OCIE1A);
  39               		.loc 1 107 2 is_stmt 1 view .LVU9
  40               		.loc 1 107 7 is_stmt 0 view .LVU10
  41 0014 80E1      		ldi r24,lo8(16)
  42 0016 89BF      		out 0x39,r24
 108:main.cpp      **** 	
 109:main.cpp      **** 	//Interrupts global freigeben
 110:main.cpp      **** 	sei();
  43               		.loc 1 110 2 is_stmt 1 view .LVU11
  44               		.loc 1 110 7 is_stmt 0 view .LVU12
  45               	/* #APP */
  46               	 ;  110 "main.cpp" 1
  47 0018 7894      		sei
  48               	 ;  0 "" 2
 111:main.cpp      **** 	
 112:main.cpp      **** 	// Interrupts nicht mehr freigeben
 113:main.cpp      **** 	// cli()
 114:main.cpp      **** 	
 115:main.cpp      **** 	return;
  49               		.loc 1 115 2 is_stmt 1 view .LVU13
  50               	/* #NOAPP */
  51               	/* epilogue start */
 116:main.cpp      **** }
  52               		.loc 1 116 1 is_stmt 0 view .LVU14
  53 001a 0895      		ret
  54               		.cfi_endproc
  55               	.LFE13:
  57               		.section	.rodata.str1.1,"aMS",@progbits,1
  58               	.LC0:
  59 0000 5072 6F62 		.string	"Probepruefung Teil 2\n\r\n\r"
  59      6570 7275 
  59      6566 756E 
  59      6720 5465 
  59      696C 2032 
  60               		.section	.text.startup,"ax",@progbits
  61               	.global	main
  63               	main:
  64               	.LFB12:
  19:main.cpp      **** 	DDRC = 0xFF;			// LED-Port: output
  65               		.loc 1 19 1 is_stmt 1 view -0
  66               		.cfi_startproc
  67 0000 CDB7      		in r28,__SP_L__
  68 0002 DEB7      		in r29,__SP_H__
  69               	.LCFI0:
  70               		.cfi_def_cfa_register 28
  71 0004 CB59      		subi r28,-101
  72 0006 D109      		sbc r29,__zero_reg__
  73               	.LCFI1:
  74               		.cfi_def_cfa_offset 157
  75 0008 0FB6      		in __tmp_reg__,__SREG__
  76 000a F894      		cli
  77 000c DEBF      		out __SP_H__,r29
  78 000e 0FBE      		out __SREG__,__tmp_reg__
  79 0010 CDBF      		out __SP_L__,r28
  80               	/* prologue: function */
  81               	/* frame size = 155 */
  82               	/* stack size = 155 */
  83               	.L__stack_usage = 155
  20:main.cpp      **** 	PORTC = 0x00;			// LEDs ein
  84               		.loc 1 20 2 view .LVU16
  20:main.cpp      **** 	PORTC = 0x00;			// LEDs ein
  85               		.loc 1 20 7 is_stmt 0 view .LVU17
  86 0012 8FEF      		ldi r24,lo8(-1)
  87 0014 84BB      		out 0x14,r24
  21:main.cpp      ****     _delay_ms(100);
  88               		.loc 1 21 2 is_stmt 1 view .LVU18
  21:main.cpp      ****     _delay_ms(100);
  89               		.loc 1 21 8 is_stmt 0 view .LVU19
  90 0016 15BA      		out 0x15,__zero_reg__
  22:main.cpp      ****     PORTC = 0xFF;            // LEDs aus
  91               		.loc 1 22 5 is_stmt 1 view .LVU20
  92               	.LVL0:
  93               	.LBB6:
  94               	.LBI6:
  95               		.file 2 "/opt/homebrew/Cellar/avr-gcc@9/9.3.0_3/avr/include/util/delay.h"
   1:/opt/homebrew/Cellar/avr-gcc@9/9.3.0_3/avr/include/util/delay.h **** /* Copyright (c) 2002, Marek Michalkiewicz
   2:/opt/homebrew/Cellar/avr-gcc@9/9.3.0_3/avr/include/util/delay.h ****    Copyright (c) 2004,2005,2007 Joerg Wunsch
   3:/opt/homebrew/Cellar/avr-gcc@9/9.3.0_3/avr/include/util/delay.h ****    Copyright (c) 2007  Florin-Viorel Petrov
   4:/opt/homebrew/Cellar/avr-gcc@9/9.3.0_3/avr/include/util/delay.h ****    All rights reserved.
   5:/opt/homebrew/Cellar/avr-gcc@9/9.3.0_3/avr/include/util/delay.h **** 
   6:/opt/homebrew/Cellar/avr-gcc@9/9.3.0_3/avr/include/util/delay.h ****    Redistribution and use in source and binary forms, with or without
   7:/opt/homebrew/Cellar/avr-gcc@9/9.3.0_3/avr/include/util/delay.h ****    modification, are permitted provided that the following conditions are met:
   8:/opt/homebrew/Cellar/avr-gcc@9/9.3.0_3/avr/include/util/delay.h **** 
   9:/opt/homebrew/Cellar/avr-gcc@9/9.3.0_3/avr/include/util/delay.h ****    * Redistributions of source code must retain the above copyright
  10:/opt/homebrew/Cellar/avr-gcc@9/9.3.0_3/avr/include/util/delay.h ****      notice, this list of conditions and the following disclaimer.
  11:/opt/homebrew/Cellar/avr-gcc@9/9.3.0_3/avr/include/util/delay.h **** 
  12:/opt/homebrew/Cellar/avr-gcc@9/9.3.0_3/avr/include/util/delay.h ****    * Redistributions in binary form must reproduce the above copyright
  13:/opt/homebrew/Cellar/avr-gcc@9/9.3.0_3/avr/include/util/delay.h ****      notice, this list of conditions and the following disclaimer in
  14:/opt/homebrew/Cellar/avr-gcc@9/9.3.0_3/avr/include/util/delay.h ****      the documentation and/or other materials provided with the
  15:/opt/homebrew/Cellar/avr-gcc@9/9.3.0_3/avr/include/util/delay.h ****      distribution.
  16:/opt/homebrew/Cellar/avr-gcc@9/9.3.0_3/avr/include/util/delay.h **** 
  17:/opt/homebrew/Cellar/avr-gcc@9/9.3.0_3/avr/include/util/delay.h ****    * Neither the name of the copyright holders nor the names of
  18:/opt/homebrew/Cellar/avr-gcc@9/9.3.0_3/avr/include/util/delay.h ****      contributors may be used to endorse or promote products derived
  19:/opt/homebrew/Cellar/avr-gcc@9/9.3.0_3/avr/include/util/delay.h ****      from this software without specific prior written permission.
  20:/opt/homebrew/Cellar/avr-gcc@9/9.3.0_3/avr/include/util/delay.h **** 
  21:/opt/homebrew/Cellar/avr-gcc@9/9.3.0_3/avr/include/util/delay.h ****   THIS SOFTWARE IS PROVIDED BY THE COPYRIGHT HOLDERS AND CONTRIBUTORS "AS IS"
  22:/opt/homebrew/Cellar/avr-gcc@9/9.3.0_3/avr/include/util/delay.h ****   AND ANY EXPRESS OR IMPLIED WARRANTIES, INCLUDING, BUT NOT LIMITED TO, THE
  23:/opt/homebrew/Cellar/avr-gcc@9/9.3.0_3/avr/include/util/delay.h ****   IMPLIED WARRANTIES OF MERCHANTABILITY AND FITNESS FOR A PARTICULAR PURPOSE
  24:/opt/homebrew/Cellar/avr-gcc@9/9.3.0_3/avr/include/util/delay.h ****   ARE DISCLAIMED. IN NO EVENT SHALL THE COPYRIGHT OWNER OR CONTRIBUTORS BE
  25:/opt/homebrew/Cellar/avr-gcc@9/9.3.0_3/avr/include/util/delay.h ****   LIABLE FOR ANY DIRECT, INDIRECT, INCIDENTAL, SPECIAL, EXEMPLARY, OR
  26:/opt/homebrew/Cellar/avr-gcc@9/9.3.0_3/avr/include/util/delay.h ****   CONSEQUENTIAL DAMAGES (INCLUDING, BUT NOT LIMITED TO, PROCUREMENT OF
  27:/opt/homebrew/Cellar/avr-gcc@9/9.3.0_3/avr/include/util/delay.h ****   SUBSTITUTE GOODS OR SERVICES; LOSS OF USE, DATA, OR PROFITS; OR BUSINESS
  28:/opt/homebrew/Cellar/avr-gcc@9/9.3.0_3/avr/include/util/delay.h ****   INTERRUPTION) HOWEVER CAUSED AND ON ANY THEORY OF LIABILITY, WHETHER IN
  29:/opt/homebrew/Cellar/avr-gcc@9/9.3.0_3/avr/include/util/delay.h ****   CONTRACT, STRICT LIABILITY, OR TORT (INCLUDING NEGLIGENCE OR OTHERWISE)
  30:/opt/homebrew/Cellar/avr-gcc@9/9.3.0_3/avr/include/util/delay.h ****   ARISING IN ANY WAY OUT OF THE USE OF THIS SOFTWARE, EVEN IF ADVISED OF THE
  31:/opt/homebrew/Cellar/avr-gcc@9/9.3.0_3/avr/include/util/delay.h ****   POSSIBILITY OF SUCH DAMAGE. */
  32:/opt/homebrew/Cellar/avr-gcc@9/9.3.0_3/avr/include/util/delay.h **** 
  33:/opt/homebrew/Cellar/avr-gcc@9/9.3.0_3/avr/include/util/delay.h **** /* $Id: delay.h.in 2506 2016-02-08 10:05:45Z joerg_wunsch $ */
  34:/opt/homebrew/Cellar/avr-gcc@9/9.3.0_3/avr/include/util/delay.h **** 
  35:/opt/homebrew/Cellar/avr-gcc@9/9.3.0_3/avr/include/util/delay.h **** #ifndef _UTIL_DELAY_H_
  36:/opt/homebrew/Cellar/avr-gcc@9/9.3.0_3/avr/include/util/delay.h **** #define _UTIL_DELAY_H_ 1
  37:/opt/homebrew/Cellar/avr-gcc@9/9.3.0_3/avr/include/util/delay.h **** 
  38:/opt/homebrew/Cellar/avr-gcc@9/9.3.0_3/avr/include/util/delay.h **** #ifndef __DOXYGEN__
  39:/opt/homebrew/Cellar/avr-gcc@9/9.3.0_3/avr/include/util/delay.h **** #  ifndef __HAS_DELAY_CYCLES
  40:/opt/homebrew/Cellar/avr-gcc@9/9.3.0_3/avr/include/util/delay.h **** #    define __HAS_DELAY_CYCLES 1
  41:/opt/homebrew/Cellar/avr-gcc@9/9.3.0_3/avr/include/util/delay.h **** #  endif
  42:/opt/homebrew/Cellar/avr-gcc@9/9.3.0_3/avr/include/util/delay.h **** #endif  /* __DOXYGEN__ */
  43:/opt/homebrew/Cellar/avr-gcc@9/9.3.0_3/avr/include/util/delay.h **** 
  44:/opt/homebrew/Cellar/avr-gcc@9/9.3.0_3/avr/include/util/delay.h **** #include <inttypes.h>
  45:/opt/homebrew/Cellar/avr-gcc@9/9.3.0_3/avr/include/util/delay.h **** #include <util/delay_basic.h>
  46:/opt/homebrew/Cellar/avr-gcc@9/9.3.0_3/avr/include/util/delay.h **** #include <math.h>
  47:/opt/homebrew/Cellar/avr-gcc@9/9.3.0_3/avr/include/util/delay.h **** 
  48:/opt/homebrew/Cellar/avr-gcc@9/9.3.0_3/avr/include/util/delay.h **** /** \file */
  49:/opt/homebrew/Cellar/avr-gcc@9/9.3.0_3/avr/include/util/delay.h **** /** \defgroup util_delay <util/delay.h>: Convenience functions for busy-wait delay loops
  50:/opt/homebrew/Cellar/avr-gcc@9/9.3.0_3/avr/include/util/delay.h ****     \code
  51:/opt/homebrew/Cellar/avr-gcc@9/9.3.0_3/avr/include/util/delay.h ****     #define F_CPU 1000000UL  // 1 MHz
  52:/opt/homebrew/Cellar/avr-gcc@9/9.3.0_3/avr/include/util/delay.h ****     //#define F_CPU 14.7456E6
  53:/opt/homebrew/Cellar/avr-gcc@9/9.3.0_3/avr/include/util/delay.h ****     #include <util/delay.h>
  54:/opt/homebrew/Cellar/avr-gcc@9/9.3.0_3/avr/include/util/delay.h ****     \endcode
  55:/opt/homebrew/Cellar/avr-gcc@9/9.3.0_3/avr/include/util/delay.h **** 
  56:/opt/homebrew/Cellar/avr-gcc@9/9.3.0_3/avr/include/util/delay.h ****     \note As an alternative method, it is possible to pass the
  57:/opt/homebrew/Cellar/avr-gcc@9/9.3.0_3/avr/include/util/delay.h ****     F_CPU macro down to the compiler from the Makefile.
  58:/opt/homebrew/Cellar/avr-gcc@9/9.3.0_3/avr/include/util/delay.h ****     Obviously, in that case, no \c \#define statement should be
  59:/opt/homebrew/Cellar/avr-gcc@9/9.3.0_3/avr/include/util/delay.h ****     used.
  60:/opt/homebrew/Cellar/avr-gcc@9/9.3.0_3/avr/include/util/delay.h **** 
  61:/opt/homebrew/Cellar/avr-gcc@9/9.3.0_3/avr/include/util/delay.h ****     The functions in this header file are wrappers around the basic
  62:/opt/homebrew/Cellar/avr-gcc@9/9.3.0_3/avr/include/util/delay.h ****     busy-wait functions from <util/delay_basic.h>.  They are meant as
  63:/opt/homebrew/Cellar/avr-gcc@9/9.3.0_3/avr/include/util/delay.h ****     convenience functions where actual time values can be specified
  64:/opt/homebrew/Cellar/avr-gcc@9/9.3.0_3/avr/include/util/delay.h ****     rather than a number of cycles to wait for.  The idea behind is
  65:/opt/homebrew/Cellar/avr-gcc@9/9.3.0_3/avr/include/util/delay.h ****     that compile-time constant expressions will be eliminated by
  66:/opt/homebrew/Cellar/avr-gcc@9/9.3.0_3/avr/include/util/delay.h ****     compiler optimization so floating-point expressions can be used
  67:/opt/homebrew/Cellar/avr-gcc@9/9.3.0_3/avr/include/util/delay.h ****     to calculate the number of delay cycles needed based on the CPU
  68:/opt/homebrew/Cellar/avr-gcc@9/9.3.0_3/avr/include/util/delay.h ****     frequency passed by the macro F_CPU.
  69:/opt/homebrew/Cellar/avr-gcc@9/9.3.0_3/avr/include/util/delay.h **** 
  70:/opt/homebrew/Cellar/avr-gcc@9/9.3.0_3/avr/include/util/delay.h ****     \note In order for these functions to work as intended, compiler
  71:/opt/homebrew/Cellar/avr-gcc@9/9.3.0_3/avr/include/util/delay.h ****     optimizations <em>must</em> be enabled, and the delay time
  72:/opt/homebrew/Cellar/avr-gcc@9/9.3.0_3/avr/include/util/delay.h ****     <em>must</em> be an expression that is a known constant at
  73:/opt/homebrew/Cellar/avr-gcc@9/9.3.0_3/avr/include/util/delay.h ****     compile-time.  If these requirements are not met, the resulting
  74:/opt/homebrew/Cellar/avr-gcc@9/9.3.0_3/avr/include/util/delay.h ****     delay will be much longer (and basically unpredictable), and
  75:/opt/homebrew/Cellar/avr-gcc@9/9.3.0_3/avr/include/util/delay.h ****     applications that otherwise do not use floating-point calculations
  76:/opt/homebrew/Cellar/avr-gcc@9/9.3.0_3/avr/include/util/delay.h ****     will experience severe code bloat by the floating-point library
  77:/opt/homebrew/Cellar/avr-gcc@9/9.3.0_3/avr/include/util/delay.h ****     routines linked into the application.
  78:/opt/homebrew/Cellar/avr-gcc@9/9.3.0_3/avr/include/util/delay.h **** 
  79:/opt/homebrew/Cellar/avr-gcc@9/9.3.0_3/avr/include/util/delay.h ****     The functions available allow the specification of microsecond, and
  80:/opt/homebrew/Cellar/avr-gcc@9/9.3.0_3/avr/include/util/delay.h ****     millisecond delays directly, using the application-supplied macro
  81:/opt/homebrew/Cellar/avr-gcc@9/9.3.0_3/avr/include/util/delay.h ****     F_CPU as the CPU clock frequency (in Hertz).
  82:/opt/homebrew/Cellar/avr-gcc@9/9.3.0_3/avr/include/util/delay.h **** 
  83:/opt/homebrew/Cellar/avr-gcc@9/9.3.0_3/avr/include/util/delay.h **** */
  84:/opt/homebrew/Cellar/avr-gcc@9/9.3.0_3/avr/include/util/delay.h **** 
  85:/opt/homebrew/Cellar/avr-gcc@9/9.3.0_3/avr/include/util/delay.h **** #if !defined(__DOXYGEN__)
  86:/opt/homebrew/Cellar/avr-gcc@9/9.3.0_3/avr/include/util/delay.h **** static __inline__ void _delay_us(double __us) __attribute__((__always_inline__));
  87:/opt/homebrew/Cellar/avr-gcc@9/9.3.0_3/avr/include/util/delay.h **** static __inline__ void _delay_ms(double __ms) __attribute__((__always_inline__));
  88:/opt/homebrew/Cellar/avr-gcc@9/9.3.0_3/avr/include/util/delay.h **** #endif
  89:/opt/homebrew/Cellar/avr-gcc@9/9.3.0_3/avr/include/util/delay.h **** 
  90:/opt/homebrew/Cellar/avr-gcc@9/9.3.0_3/avr/include/util/delay.h **** #ifndef F_CPU
  91:/opt/homebrew/Cellar/avr-gcc@9/9.3.0_3/avr/include/util/delay.h **** /* prevent compiler error by supplying a default */
  92:/opt/homebrew/Cellar/avr-gcc@9/9.3.0_3/avr/include/util/delay.h **** # warning "F_CPU not defined for <util/delay.h>"
  93:/opt/homebrew/Cellar/avr-gcc@9/9.3.0_3/avr/include/util/delay.h **** /** \ingroup util_delay
  94:/opt/homebrew/Cellar/avr-gcc@9/9.3.0_3/avr/include/util/delay.h ****     \def F_CPU
  95:/opt/homebrew/Cellar/avr-gcc@9/9.3.0_3/avr/include/util/delay.h ****     \brief CPU frequency in Hz
  96:/opt/homebrew/Cellar/avr-gcc@9/9.3.0_3/avr/include/util/delay.h **** 
  97:/opt/homebrew/Cellar/avr-gcc@9/9.3.0_3/avr/include/util/delay.h ****     The macro F_CPU specifies the CPU frequency to be considered by
  98:/opt/homebrew/Cellar/avr-gcc@9/9.3.0_3/avr/include/util/delay.h ****     the delay macros.  This macro is normally supplied by the
  99:/opt/homebrew/Cellar/avr-gcc@9/9.3.0_3/avr/include/util/delay.h ****     environment (e.g. from within a project header, or the project's
 100:/opt/homebrew/Cellar/avr-gcc@9/9.3.0_3/avr/include/util/delay.h ****     Makefile).  The value 1 MHz here is only provided as a "vanilla"
 101:/opt/homebrew/Cellar/avr-gcc@9/9.3.0_3/avr/include/util/delay.h ****     fallback if no such user-provided definition could be found.
 102:/opt/homebrew/Cellar/avr-gcc@9/9.3.0_3/avr/include/util/delay.h **** 
 103:/opt/homebrew/Cellar/avr-gcc@9/9.3.0_3/avr/include/util/delay.h ****     In terms of the delay functions, the CPU frequency can be given as
 104:/opt/homebrew/Cellar/avr-gcc@9/9.3.0_3/avr/include/util/delay.h ****     a floating-point constant (e.g. 3.6864E6 for 3.6864 MHz).
 105:/opt/homebrew/Cellar/avr-gcc@9/9.3.0_3/avr/include/util/delay.h ****     However, the macros in <util/setbaud.h> require it to be an
 106:/opt/homebrew/Cellar/avr-gcc@9/9.3.0_3/avr/include/util/delay.h ****     integer value.
 107:/opt/homebrew/Cellar/avr-gcc@9/9.3.0_3/avr/include/util/delay.h ****  */
 108:/opt/homebrew/Cellar/avr-gcc@9/9.3.0_3/avr/include/util/delay.h **** # define F_CPU 1000000UL
 109:/opt/homebrew/Cellar/avr-gcc@9/9.3.0_3/avr/include/util/delay.h **** #endif
 110:/opt/homebrew/Cellar/avr-gcc@9/9.3.0_3/avr/include/util/delay.h **** 
 111:/opt/homebrew/Cellar/avr-gcc@9/9.3.0_3/avr/include/util/delay.h **** #ifndef __OPTIMIZE__
 112:/opt/homebrew/Cellar/avr-gcc@9/9.3.0_3/avr/include/util/delay.h **** # warning "Compiler optimizations disabled; functions from <util/delay.h> won't work as designed"
 113:/opt/homebrew/Cellar/avr-gcc@9/9.3.0_3/avr/include/util/delay.h **** #endif
 114:/opt/homebrew/Cellar/avr-gcc@9/9.3.0_3/avr/include/util/delay.h **** 
 115:/opt/homebrew/Cellar/avr-gcc@9/9.3.0_3/avr/include/util/delay.h **** #if __HAS_DELAY_CYCLES && defined(__OPTIMIZE__) && \
 116:/opt/homebrew/Cellar/avr-gcc@9/9.3.0_3/avr/include/util/delay.h ****   !defined(__DELAY_BACKWARD_COMPATIBLE__) &&	   \
 117:/opt/homebrew/Cellar/avr-gcc@9/9.3.0_3/avr/include/util/delay.h ****   __STDC_HOSTED__
 118:/opt/homebrew/Cellar/avr-gcc@9/9.3.0_3/avr/include/util/delay.h **** #  include <math.h>
 119:/opt/homebrew/Cellar/avr-gcc@9/9.3.0_3/avr/include/util/delay.h **** #endif
 120:/opt/homebrew/Cellar/avr-gcc@9/9.3.0_3/avr/include/util/delay.h **** 
 121:/opt/homebrew/Cellar/avr-gcc@9/9.3.0_3/avr/include/util/delay.h **** /**
 122:/opt/homebrew/Cellar/avr-gcc@9/9.3.0_3/avr/include/util/delay.h ****    \ingroup util_delay
 123:/opt/homebrew/Cellar/avr-gcc@9/9.3.0_3/avr/include/util/delay.h **** 
 124:/opt/homebrew/Cellar/avr-gcc@9/9.3.0_3/avr/include/util/delay.h ****    Perform a delay of \c __ms milliseconds, using _delay_loop_2().
 125:/opt/homebrew/Cellar/avr-gcc@9/9.3.0_3/avr/include/util/delay.h **** 
 126:/opt/homebrew/Cellar/avr-gcc@9/9.3.0_3/avr/include/util/delay.h ****    The macro F_CPU is supposed to be defined to a
 127:/opt/homebrew/Cellar/avr-gcc@9/9.3.0_3/avr/include/util/delay.h ****    constant defining the CPU clock frequency (in Hertz).
 128:/opt/homebrew/Cellar/avr-gcc@9/9.3.0_3/avr/include/util/delay.h **** 
 129:/opt/homebrew/Cellar/avr-gcc@9/9.3.0_3/avr/include/util/delay.h ****    The maximal possible delay is 262.14 ms / F_CPU in MHz.
 130:/opt/homebrew/Cellar/avr-gcc@9/9.3.0_3/avr/include/util/delay.h **** 
 131:/opt/homebrew/Cellar/avr-gcc@9/9.3.0_3/avr/include/util/delay.h ****    When the user request delay which exceed the maximum possible one,
 132:/opt/homebrew/Cellar/avr-gcc@9/9.3.0_3/avr/include/util/delay.h ****    _delay_ms() provides a decreased resolution functionality. In this
 133:/opt/homebrew/Cellar/avr-gcc@9/9.3.0_3/avr/include/util/delay.h ****    mode _delay_ms() will work with a resolution of 1/10 ms, providing
 134:/opt/homebrew/Cellar/avr-gcc@9/9.3.0_3/avr/include/util/delay.h ****    delays up to 6.5535 seconds (independent from CPU frequency).  The
 135:/opt/homebrew/Cellar/avr-gcc@9/9.3.0_3/avr/include/util/delay.h ****    user will not be informed about decreased resolution.
 136:/opt/homebrew/Cellar/avr-gcc@9/9.3.0_3/avr/include/util/delay.h **** 
 137:/opt/homebrew/Cellar/avr-gcc@9/9.3.0_3/avr/include/util/delay.h ****    If the avr-gcc toolchain has __builtin_avr_delay_cycles()
 138:/opt/homebrew/Cellar/avr-gcc@9/9.3.0_3/avr/include/util/delay.h ****    support, maximal possible delay is 4294967.295 ms/ F_CPU in MHz. For
 139:/opt/homebrew/Cellar/avr-gcc@9/9.3.0_3/avr/include/util/delay.h ****    values greater than the maximal possible delay, overflows results in
 140:/opt/homebrew/Cellar/avr-gcc@9/9.3.0_3/avr/include/util/delay.h ****    no delay i.e., 0ms.
 141:/opt/homebrew/Cellar/avr-gcc@9/9.3.0_3/avr/include/util/delay.h **** 
 142:/opt/homebrew/Cellar/avr-gcc@9/9.3.0_3/avr/include/util/delay.h ****    Conversion of \c __ms into clock cycles may not always result in
 143:/opt/homebrew/Cellar/avr-gcc@9/9.3.0_3/avr/include/util/delay.h ****    integer.  By default, the clock cycles rounded up to next
 144:/opt/homebrew/Cellar/avr-gcc@9/9.3.0_3/avr/include/util/delay.h ****    integer. This ensures that the user gets at least \c __ms
 145:/opt/homebrew/Cellar/avr-gcc@9/9.3.0_3/avr/include/util/delay.h ****    microseconds of delay.
 146:/opt/homebrew/Cellar/avr-gcc@9/9.3.0_3/avr/include/util/delay.h **** 
 147:/opt/homebrew/Cellar/avr-gcc@9/9.3.0_3/avr/include/util/delay.h ****    Alternatively, by defining the macro \c __DELAY_ROUND_DOWN__, or
 148:/opt/homebrew/Cellar/avr-gcc@9/9.3.0_3/avr/include/util/delay.h ****    \c __DELAY_ROUND_CLOSEST__, before including this header file, the
 149:/opt/homebrew/Cellar/avr-gcc@9/9.3.0_3/avr/include/util/delay.h ****    algorithm can be made to round down, or round to closest integer,
 150:/opt/homebrew/Cellar/avr-gcc@9/9.3.0_3/avr/include/util/delay.h ****    respectively.
 151:/opt/homebrew/Cellar/avr-gcc@9/9.3.0_3/avr/include/util/delay.h **** 
 152:/opt/homebrew/Cellar/avr-gcc@9/9.3.0_3/avr/include/util/delay.h ****    \note
 153:/opt/homebrew/Cellar/avr-gcc@9/9.3.0_3/avr/include/util/delay.h **** 
 154:/opt/homebrew/Cellar/avr-gcc@9/9.3.0_3/avr/include/util/delay.h ****    The implementation of _delay_ms() based on
 155:/opt/homebrew/Cellar/avr-gcc@9/9.3.0_3/avr/include/util/delay.h ****    __builtin_avr_delay_cycles() is not backward compatible with older
 156:/opt/homebrew/Cellar/avr-gcc@9/9.3.0_3/avr/include/util/delay.h ****    implementations.  In order to get functionality backward compatible
 157:/opt/homebrew/Cellar/avr-gcc@9/9.3.0_3/avr/include/util/delay.h ****    with previous versions, the macro \c "__DELAY_BACKWARD_COMPATIBLE__"
 158:/opt/homebrew/Cellar/avr-gcc@9/9.3.0_3/avr/include/util/delay.h ****    must be defined before including this header file. Also, the
 159:/opt/homebrew/Cellar/avr-gcc@9/9.3.0_3/avr/include/util/delay.h ****    backward compatible algorithm will be chosen if the code is
 160:/opt/homebrew/Cellar/avr-gcc@9/9.3.0_3/avr/include/util/delay.h ****    compiled in a <em>freestanding environment</em> (GCC option
 161:/opt/homebrew/Cellar/avr-gcc@9/9.3.0_3/avr/include/util/delay.h ****    \c -ffreestanding), as the math functions required for rounding are
 162:/opt/homebrew/Cellar/avr-gcc@9/9.3.0_3/avr/include/util/delay.h ****    not available to the compiler then.
 163:/opt/homebrew/Cellar/avr-gcc@9/9.3.0_3/avr/include/util/delay.h **** 
 164:/opt/homebrew/Cellar/avr-gcc@9/9.3.0_3/avr/include/util/delay.h ****  */
 165:/opt/homebrew/Cellar/avr-gcc@9/9.3.0_3/avr/include/util/delay.h **** void
 166:/opt/homebrew/Cellar/avr-gcc@9/9.3.0_3/avr/include/util/delay.h **** _delay_ms(double __ms)
  96               		.loc 2 166 1 view .LVU21
  97               	.LBB7:
 167:/opt/homebrew/Cellar/avr-gcc@9/9.3.0_3/avr/include/util/delay.h **** {
 168:/opt/homebrew/Cellar/avr-gcc@9/9.3.0_3/avr/include/util/delay.h **** 	double __tmp ;
  98               		.loc 2 168 2 view .LVU22
 169:/opt/homebrew/Cellar/avr-gcc@9/9.3.0_3/avr/include/util/delay.h **** #if __HAS_DELAY_CYCLES && defined(__OPTIMIZE__) && \
 170:/opt/homebrew/Cellar/avr-gcc@9/9.3.0_3/avr/include/util/delay.h ****   !defined(__DELAY_BACKWARD_COMPATIBLE__) &&	   \
 171:/opt/homebrew/Cellar/avr-gcc@9/9.3.0_3/avr/include/util/delay.h ****   __STDC_HOSTED__
 172:/opt/homebrew/Cellar/avr-gcc@9/9.3.0_3/avr/include/util/delay.h **** 	uint32_t __ticks_dc;
  99               		.loc 2 172 2 view .LVU23
 173:/opt/homebrew/Cellar/avr-gcc@9/9.3.0_3/avr/include/util/delay.h **** 	extern void __builtin_avr_delay_cycles(unsigned long);
 100               		.loc 2 173 2 view .LVU24
 174:/opt/homebrew/Cellar/avr-gcc@9/9.3.0_3/avr/include/util/delay.h **** 	__tmp = ((F_CPU) / 1e3) * __ms;
 101               		.loc 2 174 2 view .LVU25
 175:/opt/homebrew/Cellar/avr-gcc@9/9.3.0_3/avr/include/util/delay.h **** 
 176:/opt/homebrew/Cellar/avr-gcc@9/9.3.0_3/avr/include/util/delay.h **** 	#if defined(__DELAY_ROUND_DOWN__)
 177:/opt/homebrew/Cellar/avr-gcc@9/9.3.0_3/avr/include/util/delay.h **** 		__ticks_dc = (uint32_t)fabs(__tmp);
 178:/opt/homebrew/Cellar/avr-gcc@9/9.3.0_3/avr/include/util/delay.h **** 
 179:/opt/homebrew/Cellar/avr-gcc@9/9.3.0_3/avr/include/util/delay.h **** 	#elif defined(__DELAY_ROUND_CLOSEST__)
 180:/opt/homebrew/Cellar/avr-gcc@9/9.3.0_3/avr/include/util/delay.h **** 		__ticks_dc = (uint32_t)(fabs(__tmp)+0.5);
 181:/opt/homebrew/Cellar/avr-gcc@9/9.3.0_3/avr/include/util/delay.h **** 
 182:/opt/homebrew/Cellar/avr-gcc@9/9.3.0_3/avr/include/util/delay.h **** 	#else
 183:/opt/homebrew/Cellar/avr-gcc@9/9.3.0_3/avr/include/util/delay.h **** 		//round up by default
 184:/opt/homebrew/Cellar/avr-gcc@9/9.3.0_3/avr/include/util/delay.h **** 		__ticks_dc = (uint32_t)(ceil(fabs(__tmp)));
 102               		.loc 2 184 3 view .LVU26
 185:/opt/homebrew/Cellar/avr-gcc@9/9.3.0_3/avr/include/util/delay.h **** 	#endif
 186:/opt/homebrew/Cellar/avr-gcc@9/9.3.0_3/avr/include/util/delay.h **** 
 187:/opt/homebrew/Cellar/avr-gcc@9/9.3.0_3/avr/include/util/delay.h **** 	__builtin_avr_delay_cycles(__ticks_dc);
 103               		.loc 2 187 2 view .LVU27
 104               		.loc 2 187 28 is_stmt 0 view .LVU28
 105 0018 2FEF      		ldi r18,lo8(319999)
 106 001a 31EE      		ldi r19,hi8(319999)
 107 001c 94E0      		ldi r25,hlo8(319999)
 108 001e 2150      	1:	subi r18,1
 109 0020 3040      		sbci r19,0
 110 0022 9040      		sbci r25,0
 111 0024 01F4      		brne 1b
 112 0026 00C0      		rjmp .
 113 0028 0000      		nop
 114               	.LVL1:
 115               		.loc 2 187 28 view .LVU29
 116               	.LBE7:
 117               	.LBE6:
  23:main.cpp      ****     VoltageStatistics V;
 118               		.loc 1 23 5 is_stmt 1 view .LVU30
  23:main.cpp      ****     VoltageStatistics V;
 119               		.loc 1 23 11 is_stmt 0 view .LVU31
 120 002a 85BB      		out 0x15,r24
  24:main.cpp      **** 	USART UART(8,0,1,57600);	// USART init 8 Zeichenbits , keien Paritätsbits , 1 Stoppbit, 9600 Zeic
 121               		.loc 1 24 5 is_stmt 1 view .LVU32
  24:main.cpp      **** 	USART UART(8,0,1,57600);	// USART init 8 Zeichenbits , keien Paritätsbits , 1 Stoppbit, 9600 Zeic
 122               		.loc 1 24 23 is_stmt 0 view .LVU33
 123 002c CE01      		movw r24,r28
 124 002e 8B59      		subi r24,-101
 125 0030 9F4F      		sbci r25,-1
 126 0032 0E94 0000 		call _ZN17VoltageStatisticsC1Ev
 127               	.LVL2:
  25:main.cpp      **** 	can_init(BITRATE_500_KBPS);      // CAN init 500 kbit/s
 128               		.loc 1 25 2 is_stmt 1 view .LVU34
  25:main.cpp      **** 	can_init(BITRATE_500_KBPS);      // CAN init 500 kbit/s
 129               		.loc 1 25 24 is_stmt 0 view .LVU35
 130 0036 E12C      		mov r14,__zero_reg__
 131 0038 11EE      		ldi r17,lo8(-31)
 132 003a F12E      		mov r15,r17
 133 003c 00E0      		ldi r16,0
 134 003e 10E0      		ldi r17,0
 135 0040 21E0      		ldi r18,lo8(1)
 136 0042 40E0      		ldi r20,0
 137 0044 68E0      		ldi r22,lo8(8)
 138 0046 CE01      		movw r24,r28
 139 0048 8F56      		subi r24,111
 140 004a 9F4F      		sbci r25,-1
 141 004c 0E94 0000 		call _ZN5USARTC1Ehhhm
 142               	.LVL3:
  26:main.cpp      ****     char buffer[100];		// Buffer zur Zwschischenspeicherung von Zeichenketten
 143               		.loc 1 26 2 is_stmt 1 view .LVU36
  26:main.cpp      ****     char buffer[100];		// Buffer zur Zwschischenspeicherung von Zeichenketten
 144               		.loc 1 26 10 is_stmt 0 view .LVU37
 145 0050 86E0      		ldi r24,lo8(6)
 146 0052 0E94 0000 		call can_init
 147               	.LVL4:
  27:main.cpp      **** 	
 148               		.loc 1 27 5 is_stmt 1 view .LVU38
  29:main.cpp      **** 	      sendmsg_activ.id= 0x33;
 149               		.loc 1 29 5 view .LVU39
  30:main.cpp      **** 		  sendmsg_activ.flags.rtr=0;
 150               		.loc 1 30 8 view .LVU40
  30:main.cpp      **** 		  sendmsg_activ.flags.rtr=0;
 151               		.loc 1 30 24 is_stmt 0 view .LVU41
 152 0056 83E3      		ldi r24,lo8(51)
 153 0058 90E0      		ldi r25,0
 154 005a CB57      		subi r28,lo8(-133)
 155 005c DF4F      		sbci r29,hi8(-133)
 156 005e 9983      		std Y+1,r25
 157 0060 8883      		st Y,r24
 158 0062 C558      		subi r28,lo8(133)
 159 0064 D040      		sbci r29,hi8(133)
  31:main.cpp      **** 		  sendmsg_activ.length=2;
 160               		.loc 1 31 5 is_stmt 1 view .LVU42
  31:main.cpp      **** 		  sendmsg_activ.length=2;
 161               		.loc 1 31 28 is_stmt 0 view .LVU43
 162 0066 C957      		subi r28,lo8(-135)
 163 0068 DF4F      		sbci r29,hi8(-135)
 164 006a 8881      		ld r24,Y
 165 006c C758      		subi r28,lo8(135)
 166 006e D040      		sbci r29,hi8(135)
 167 0070 8E7F      		andi r24,lo8(~(1<<0))
 168 0072 C957      		subi r28,lo8(-135)
 169 0074 DF4F      		sbci r29,hi8(-135)
 170 0076 8883      		st Y,r24
 171 0078 C758      		subi r28,lo8(135)
 172 007a D040      		sbci r29,hi8(135)
  32:main.cpp      **** 	can_t sendmsg_nactiv;    // Message-Objekt auf dem Stack anlegen
 173               		.loc 1 32 5 is_stmt 1 view .LVU44
  32:main.cpp      **** 	can_t sendmsg_nactiv;    // Message-Objekt auf dem Stack anlegen
 174               		.loc 1 32 25 is_stmt 0 view .LVU45
 175 007c 82E0      		ldi r24,lo8(2)
 176 007e C857      		subi r28,lo8(-136)
 177 0080 DF4F      		sbci r29,hi8(-136)
 178 0082 8883      		st Y,r24
 179 0084 C858      		subi r28,lo8(136)
 180 0086 D040      		sbci r29,hi8(136)
  33:main.cpp      **** 	      sendmsg_nactiv.id= 0x32;
 181               		.loc 1 33 2 is_stmt 1 view .LVU46
  34:main.cpp      **** 		  sendmsg_nactiv.flags.rtr=0;
 182               		.loc 1 34 8 view .LVU47
  34:main.cpp      **** 		  sendmsg_nactiv.flags.rtr=0;
 183               		.loc 1 34 25 is_stmt 0 view .LVU48
 184 0088 82E3      		ldi r24,lo8(50)
 185 008a 90E0      		ldi r25,0
 186 008c EB96      		adiw r28,121-62
 187 008e 9FAF      		std Y+63,r25
 188 0090 8EAF      		std Y+62,r24
 189 0092 EB97      		sbiw r28,121-62
  35:main.cpp      **** 		  sendmsg_nactiv.length=0;
 190               		.loc 1 35 5 is_stmt 1 view .LVU49
  35:main.cpp      **** 		  sendmsg_nactiv.length=0;
 191               		.loc 1 35 29 is_stmt 0 view .LVU50
 192 0094 EC96      		adiw r28,123-63
 193 0096 8FAD      		ldd r24,Y+63
 194 0098 EC97      		sbiw r28,123-63
 195 009a 8E7F      		andi r24,lo8(~(1<<0))
 196 009c EC96      		adiw r28,123-63
 197 009e 8FAF      		std Y+63,r24
 198 00a0 EC97      		sbiw r28,123-63
  36:main.cpp      **** 
 199               		.loc 1 36 5 is_stmt 1 view .LVU51
  36:main.cpp      **** 
 200               		.loc 1 36 26 is_stmt 0 view .LVU52
 201 00a2 ED96      		adiw r28,124-63
 202 00a4 1FAE      		std Y+63,__zero_reg__
 203 00a6 ED97      		sbiw r28,124-63
  39:main.cpp      **** 	UART.UsartPuts(buffer);		   // Ausgabe
 204               		.loc 1 39 2 is_stmt 1 view .LVU53
  39:main.cpp      **** 	UART.UsartPuts(buffer);		   // Ausgabe
 205               		.loc 1 39 9 is_stmt 0 view .LVU54
 206 00a8 60E0      		ldi r22,lo8(.LC0)
 207 00aa 70E0      		ldi r23,hi8(.LC0)
 208 00ac CE01      		movw r24,r28
 209 00ae 0196      		adiw r24,1
 210 00b0 0E94 0000 		call strcpy
 211               	.LVL5:
  40:main.cpp      **** 	
 212               		.loc 1 40 2 is_stmt 1 view .LVU55
  40:main.cpp      **** 	
 213               		.loc 1 40 16 is_stmt 0 view .LVU56
 214 00b4 BE01      		movw r22,r28
 215 00b6 6F5F      		subi r22,-1
 216 00b8 7F4F      		sbci r23,-1
 217 00ba CE01      		movw r24,r28
 218 00bc 8F56      		subi r24,111
 219 00be 9F4F      		sbci r25,-1
 220 00c0 0E94 0000 		call _ZN5USART9UsartPutsEPc
 221               	.LVL6:
  42:main.cpp      **** 	
 222               		.loc 1 42 2 is_stmt 1 view .LVU57
 223               	.LBB8:
 224               	.LBI8:
 166:/opt/homebrew/Cellar/avr-gcc@9/9.3.0_3/avr/include/util/delay.h **** {
 225               		.loc 2 166 1 view .LVU58
 226               	.LBB9:
 168:/opt/homebrew/Cellar/avr-gcc@9/9.3.0_3/avr/include/util/delay.h **** #if __HAS_DELAY_CYCLES && defined(__OPTIMIZE__) && \
 227               		.loc 2 168 2 view .LVU59
 172:/opt/homebrew/Cellar/avr-gcc@9/9.3.0_3/avr/include/util/delay.h **** 	extern void __builtin_avr_delay_cycles(unsigned long);
 228               		.loc 2 172 2 view .LVU60
 173:/opt/homebrew/Cellar/avr-gcc@9/9.3.0_3/avr/include/util/delay.h **** 	__tmp = ((F_CPU) / 1e3) * __ms;
 229               		.loc 2 173 2 view .LVU61
 174:/opt/homebrew/Cellar/avr-gcc@9/9.3.0_3/avr/include/util/delay.h **** 
 230               		.loc 2 174 2 view .LVU62
 184:/opt/homebrew/Cellar/avr-gcc@9/9.3.0_3/avr/include/util/delay.h **** 	#endif
 231               		.loc 2 184 3 view .LVU63
 232               		.loc 2 187 2 view .LVU64
 233               		.loc 2 187 28 is_stmt 0 view .LVU65
 234 00c4 AFEF      		ldi r26,lo8(1599999)
 235 00c6 B9E6      		ldi r27,hi8(1599999)
 236 00c8 28E1      		ldi r18,hlo8(1599999)
 237 00ca A150      	1:	subi r26,1
 238 00cc B040      		sbci r27,0
 239 00ce 2040      		sbci r18,0
 240 00d0 01F4      		brne 1b
 241 00d2 00C0      		rjmp .
 242 00d4 0000      		nop
 243               	.LVL7:
 244               		.loc 2 187 28 view .LVU66
 245               	.LBE9:
 246               	.LBE8:
  44:main.cpp      ****     
 247               		.loc 1 44 2 is_stmt 1 view .LVU67
  44:main.cpp      ****     
 248               		.loc 1 44 26 is_stmt 0 view .LVU68
 249 00d6 0E94 0000 		call _Z24Timer_1_Compare_ISR_initv
 250               	.LVL8:
  46:main.cpp      **** 	uint8_t cnt=0;
 251               		.loc 1 46 2 is_stmt 1 view .LVU69
  47:main.cpp      **** 	while (1)
 252               		.loc 1 47 2 view .LVU70
  69:main.cpp      **** 		  V.showStatistics();
 253               		.loc 1 69 5 is_stmt 0 view .LVU71
 254 00da 98E0      		ldi r25,lo8(8)
 255 00dc A92E      		mov r10,r25
 256               	.LVL9:
 257               	.L7:
  19:main.cpp      **** 	DDRC = 0xFF;			// LED-Port: output
 258               		.loc 1 19 1 view .LVU72
 259 00de B12C      		mov r11,__zero_reg__
 260               	.LVL10:
 261               	.L3:
  48:main.cpp      **** 	{
 262               		.loc 1 48 2 is_stmt 1 view .LVU73
  51:main.cpp      **** 		cli();
 263               		.loc 1 51 3 view .LVU74
  51:main.cpp      **** 		cli();
 264               		.loc 1 51 16 is_stmt 0 view .LVU75
 265 00e0 8091 0000 		lds r24,flag_100ms
  51:main.cpp      **** 		cli();
 266               		.loc 1 51 3 view .LVU76
 267 00e4 8823      		tst r24
 268 00e6 01F0      		breq .L3
  52:main.cpp      ****         Zeitstempel_100ms=(Zeitstempel*100);
 269               		.loc 1 52 3 is_stmt 1 view .LVU77
  52:main.cpp      ****         Zeitstempel_100ms=(Zeitstempel*100);
 270               		.loc 1 52 8 is_stmt 0 view .LVU78
 271               	/* #APP */
 272               	 ;  52 "main.cpp" 1
 273 00e8 F894      		cli
 274               	 ;  0 "" 2
  53:main.cpp      ****         sei();
 275               		.loc 1 53 9 is_stmt 1 view .LVU79
  53:main.cpp      ****         sei();
 276               		.loc 1 53 28 is_stmt 0 view .LVU80
 277               	/* #NOAPP */
 278 00ea 2091 0000 		lds r18,Zeitstempel
 279 00ee 3091 0000 		lds r19,Zeitstempel+1
 280 00f2 4091 0000 		lds r20,Zeitstempel+2
 281 00f6 5091 0000 		lds r21,Zeitstempel+3
  53:main.cpp      ****         sei();
 282               		.loc 1 53 39 view .LVU81
 283 00fa A4E6      		ldi r26,lo8(100)
 284 00fc B0E0      		ldi r27,0
 285 00fe 0E94 0000 		call __muluhisi3
 286 0102 C856      		subi r28,lo8(-152)
 287 0104 DF4F      		sbci r29,hi8(-152)
 288 0106 6883      		st Y,r22
 289 0108 7983      		std Y+1,r23
 290 010a 8A83      		std Y+2,r24
 291 010c 9B83      		std Y+3,r25
 292 010e C859      		subi r28,lo8(152)
 293 0110 D040      		sbci r29,hi8(152)
  53:main.cpp      ****         sei();
 294               		.loc 1 53 26 view .LVU82
 295 0112 6093 0000 		sts Zeitstempel_100ms,r22
 296 0116 7093 0000 		sts Zeitstempel_100ms+1,r23
 297 011a 8093 0000 		sts Zeitstempel_100ms+2,r24
 298 011e 9093 0000 		sts Zeitstempel_100ms+3,r25
  54:main.cpp      **** 		cnt++;
 299               		.loc 1 54 9 is_stmt 1 view .LVU83
  54:main.cpp      **** 		cnt++;
 300               		.loc 1 54 14 is_stmt 0 view .LVU84
 301               	/* #APP */
 302               	 ;  54 "main.cpp" 1
 303 0122 7894      		sei
 304               	 ;  0 "" 2
  55:main.cpp      **** 		flag_100ms=false;
 305               		.loc 1 55 3 is_stmt 1 view .LVU85
  55:main.cpp      **** 		flag_100ms=false;
 306               		.loc 1 55 6 is_stmt 0 view .LVU86
 307               	/* #NOAPP */
 308 0124 B394      		inc r11
 309               	.LVL11:
  56:main.cpp      ****         lastValueMilliVolt= (V.convertMilliVoltage(V.readValue(6)));
 310               		.loc 1 56 3 is_stmt 1 view .LVU87
  56:main.cpp      ****         lastValueMilliVolt= (V.convertMilliVoltage(V.readValue(6)));
 311               		.loc 1 56 13 is_stmt 0 view .LVU88
 312 0126 1092 0000 		sts flag_100ms,__zero_reg__
  57:main.cpp      **** 		V.addValue(lastValueMilliVolt);
 313               		.loc 1 57 9 is_stmt 1 view .LVU89
  57:main.cpp      **** 		V.addValue(lastValueMilliVolt);
 314               		.loc 1 57 51 is_stmt 0 view .LVU90
 315 012a 66E0      		ldi r22,lo8(6)
 316 012c CE01      		movw r24,r28
 317 012e 8B59      		subi r24,-101
 318 0130 9F4F      		sbci r25,-1
 319 0132 0E94 0000 		call _ZN17VoltageStatistics9readValueEh
 320               	.LVL12:
 321 0136 BC01      		movw r22,r24
 322 0138 CE01      		movw r24,r28
 323 013a 8B59      		subi r24,-101
 324 013c 9F4F      		sbci r25,-1
 325 013e 0E94 0000 		call _ZN17VoltageStatistics19convertMilliVoltageEj
 326               	.LVL13:
 327 0142 6C01      		movw r12,r24
 328               	.LVL14:
  58:main.cpp      **** 		if((lastValueMilliVolt<500)&&(cnt%2==0))
 329               		.loc 1 58 3 is_stmt 1 view .LVU91
  58:main.cpp      **** 		if((lastValueMilliVolt<500)&&(cnt%2==0))
 330               		.loc 1 58 13 is_stmt 0 view .LVU92
 331 0144 BC01      		movw r22,r24
 332 0146 CE01      		movw r24,r28
 333 0148 8B59      		subi r24,-101
 334 014a 9F4F      		sbci r25,-1
 335 014c 0E94 0000 		call _ZN17VoltageStatistics8addValueEj
 336               	.LVL15:
  59:main.cpp      **** 		{
 337               		.loc 1 59 3 is_stmt 1 view .LVU93
 338 0150 34EF      		ldi r19,-12
 339 0152 C316      		cp r12,r19
 340 0154 31E0      		ldi r19,1
 341 0156 D306      		cpc r13,r19
 342 0158 00F4      		brsh .L4
  59:main.cpp      **** 		{
 343               		.loc 1 59 30 is_stmt 0 discriminator 1 view .LVU94
 344 015a B0FC      		sbrc r11,0
 345 015c 00C0      		rjmp .L5
  61:main.cpp      ****         }   
 346               		.loc 1 61 11 is_stmt 1 view .LVU95
  61:main.cpp      ****         }   
 347               		.loc 1 61 28 is_stmt 0 view .LVU96
 348 015e 8091 0000 		lds r24,Zeitstempel_100ms
 349 0162 9091 0000 		lds r25,Zeitstempel_100ms+1
 350 0166 A091 0000 		lds r26,Zeitstempel_100ms+2
 351 016a B091 0000 		lds r27,Zeitstempel_100ms+3
 352 016e C856      		subi r28,lo8(-152)
 353 0170 DF4F      		sbci r29,hi8(-152)
 354 0172 8883      		st Y,r24
 355 0174 9983      		std Y+1,r25
 356 0176 AA83      		std Y+2,r26
 357 0178 BB83      		std Y+3,r27
 358 017a C859      		subi r28,lo8(152)
 359 017c D040      		sbci r29,hi8(152)
 360 017e 7C01      		movw r14,r24
 361 0180 8D01      		movw r16,r26
 362 0182 9601      		movw r18,r12
 363 0184 AE01      		movw r20,r28
 364 0186 4758      		subi r20,-121
 365 0188 5F4F      		sbci r21,-1
 366 018a 60E0      		ldi r22,0
 367               	.L11:
 368 018c CE01      		movw r24,r28
 369 018e 8B59      		subi r24,-101
 370 0190 9F4F      		sbci r25,-1
 371 0192 0E94 0000 		call _ZN17VoltageStatistics15sendCanMessagesEbP5can_tjm
 372               	.LVL16:
 373               	.L5:
  67:main.cpp      **** 		{
 374               		.loc 1 67 3 is_stmt 1 view .LVU97
 375 0196 9AE0      		ldi r25,lo8(10)
 376 0198 B912      		cpse r11,r25
 377 019a 00C0      		rjmp .L3
  69:main.cpp      **** 		  V.showStatistics();
 378               		.loc 1 69 5 view .LVU98
 379 019c 85B3      		in r24,0x15
 380 019e 8A25      		eor r24,r10
 381 01a0 85BB      		out 0x15,r24
  70:main.cpp      **** 		  cnt=0;
 382               		.loc 1 70 5 view .LVU99
  70:main.cpp      **** 		  cnt=0;
 383               		.loc 1 70 21 is_stmt 0 view .LVU100
 384 01a2 CE01      		movw r24,r28
 385 01a4 8B59      		subi r24,-101
 386 01a6 9F4F      		sbci r25,-1
 387 01a8 0E94 0000 		call _ZN17VoltageStatistics14showStatisticsEv
 388               	.LVL17:
  71:main.cpp      **** 
 389               		.loc 1 71 5 is_stmt 1 view .LVU101
  71:main.cpp      **** 
 390               		.loc 1 71 5 is_stmt 0 view .LVU102
 391 01ac 00C0      		rjmp .L7
 392               	.LVL18:
 393               	.L4:
  63:main.cpp      **** 		{
 394               		.loc 1 63 10 is_stmt 1 view .LVU103
  65:main.cpp      **** 		}
 395               		.loc 1 65 11 view .LVU104
  65:main.cpp      **** 		}
 396               		.loc 1 65 28 is_stmt 0 view .LVU105
 397 01ae 8091 0000 		lds r24,Zeitstempel_100ms
 398 01b2 9091 0000 		lds r25,Zeitstempel_100ms+1
 399 01b6 A091 0000 		lds r26,Zeitstempel_100ms+2
 400 01ba B091 0000 		lds r27,Zeitstempel_100ms+3
 401 01be C856      		subi r28,lo8(-152)
 402 01c0 DF4F      		sbci r29,hi8(-152)
 403 01c2 8883      		st Y,r24
 404 01c4 9983      		std Y+1,r25
 405 01c6 AA83      		std Y+2,r26
 406 01c8 BB83      		std Y+3,r27
 407 01ca C859      		subi r28,lo8(152)
 408 01cc D040      		sbci r29,hi8(152)
 409 01ce 7C01      		movw r14,r24
 410 01d0 8D01      		movw r16,r26
 411 01d2 9601      		movw r18,r12
 412 01d4 AE01      		movw r20,r28
 413 01d6 4B57      		subi r20,123
 414 01d8 5F4F      		sbci r21,-1
 415 01da 61E0      		ldi r22,lo8(1)
 416 01dc 00C0      		rjmp .L11
 417               		.cfi_endproc
 418               	.LFE12:
 420               		.text
 421               	.global	__vector_7
 423               	__vector_7:
 424               	.LFB14:
 117:main.cpp      **** 
 118:main.cpp      **** 
 119:main.cpp      **** // Compare " Vergleichsregister" Interrupt
 120:main.cpp      **** //------------------------------------------------------------------------------
 121:main.cpp      **** //  Interrupt Service Routinen
 122:main.cpp      **** //------------------------------------------------------------------------------
 123:main.cpp      **** // Interrupt-Service-Routine für den Interrupt bei Überlauf des Timer1
 124:main.cpp      **** // ISR: Schlüsselwort für Compiler, dass dies eine ISR ist
 125:main.cpp      **** // TIMER0_COMP_vect: Information an den Compiler, mit welchem Interrupt
 126:main.cpp      **** // diese ISR verknüpft werden soll. Der Bezeichner "TIMER1_COMPA_vect"
 127:main.cpp      **** //ist wie alle anderen ISR-Bezeichner in "avr/interrupt.h" definiert.
 128:main.cpp      **** ISR(TIMER1_COMPA_vect)
 129:main.cpp      **** {
 425               		.loc 1 129 1 is_stmt 1 view -0
 426               		.cfi_startproc
 427 001c 1F92 1FB6 		__gcc_isr 1
 427      1F92 1124 
 427      8F93 
 428 0026 9F93      		push r25
 429               	.LCFI2:
 430               		.cfi_def_cfa_offset 3
 431               		.cfi_offset 25, -2
 432 0028 AF93      		push r26
 433               	.LCFI3:
 434               		.cfi_def_cfa_offset 4
 435               		.cfi_offset 26, -3
 436 002a BF93      		push r27
 437               	.LCFI4:
 438               		.cfi_def_cfa_offset 5
 439               		.cfi_offset 27, -4
 440               	/* prologue: Signal */
 441               	/* frame size = 0 */
 442               	/* stack size = 3...7 */
 443               	.L__stack_usage = 3 + __gcc_isr.n_pushed
 130:main.cpp      **** // tue etwas beim Überlauf von OCR1
 131:main.cpp      **** Zeitstempel=Zeitstempel+1; // Alle 100ms Zeitstemple inkrementieren
 444               		.loc 1 131 1 view .LVU107
 445               		.loc 1 131 13 is_stmt 0 view .LVU108
 446 002c 8091 0000 		lds r24,Zeitstempel
 447 0030 9091 0000 		lds r25,Zeitstempel+1
 448 0034 A091 0000 		lds r26,Zeitstempel+2
 449 0038 B091 0000 		lds r27,Zeitstempel+3
 450               		.loc 1 131 24 view .LVU109
 451 003c 0196      		adiw r24,1
 452 003e A11D      		adc r26,__zero_reg__
 453 0040 B11D      		adc r27,__zero_reg__
 454               		.loc 1 131 12 view .LVU110
 455 0042 8093 0000 		sts Zeitstempel,r24
 456 0046 9093 0000 		sts Zeitstempel+1,r25
 457 004a A093 0000 		sts Zeitstempel+2,r26
 458 004e B093 0000 		sts Zeitstempel+3,r27
 132:main.cpp      **** flag_100ms=true;
 459               		.loc 1 132 1 is_stmt 1 view .LVU111
 460               		.loc 1 132 11 is_stmt 0 view .LVU112
 461 0052 91E0      		ldi r25,lo8(1)
 462 0054 9093 0000 		sts flag_100ms,r25
 133:main.cpp      **** 
 134:main.cpp      **** TGL_BIT(LED_PORT,0);
 463               		.loc 1 134 1 is_stmt 1 view .LVU113
 464 0058 85B3      		in r24,0x15
 465 005a 8927      		eor r24,r25
 466 005c 85BB      		out 0x15,r24
 467               	/* epilogue start */
 135:main.cpp      **** 
 136:main.cpp      ****  
 137:main.cpp      **** }
 468               		.loc 1 137 1 is_stmt 0 view .LVU114
 469 005e BF91      		pop r27
 470 0060 AF91      		pop r26
 471 0062 9F91      		pop r25
 472 0064 8F91 1F90 		__gcc_isr 2
 472      1FBE 1F90 
 473 006c 1895      		reti
 474               		__gcc_isr 0,r24
 475               		.cfi_endproc
 476               	.LFE14:
 478               	.global	flag_100ms
 479               		.section .bss
 482               	flag_100ms:
 483 0000 00        		.zero	1
 484               	.global	Zeitstempel_100ms
 487               	Zeitstempel_100ms:
 488 0001 0000 0000 		.zero	4
 489               	.global	Zeitstempel
 492               	Zeitstempel:
 493 0005 0000 0000 		.zero	4
 494               		.text
 495               	.Letext0:
 496               		.file 3 "/opt/homebrew/Cellar/avr-gcc@9/9.3.0_3/avr/include/stdint.h"
 497               		.file 4 "/opt/homebrew/Cellar/avr-gcc@9/9.3.0_3/lib/avr-gcc/9/gcc/avr/9.3.0/include/stddef.h"
 498               		.file 5 "/opt/homebrew/Cellar/avr-gcc@9/9.3.0_3/avr/include/stdio.h"
 499               		.file 6 "/opt/homebrew/Cellar/avr-gcc@9/9.3.0_3/avr/include/stdlib.h"
 500               		.file 7 "ATMega32_utility_bib.h"
 501               		.file 8 "avr-can-lib/can.h"
 502               		.file 9 "VoltageStatistics.h"
DEFINED SYMBOLS
                            *ABS*:0000000000000000 main.cpp
/var/folders/t1/hcvhy4kn4wqf61nvgxt8qfpc0000gn/T//cciQW3dI.s:2      *ABS*:000000000000003e __SP_H__
/var/folders/t1/hcvhy4kn4wqf61nvgxt8qfpc0000gn/T//cciQW3dI.s:3      *ABS*:000000000000003d __SP_L__
/var/folders/t1/hcvhy4kn4wqf61nvgxt8qfpc0000gn/T//cciQW3dI.s:4      *ABS*:000000000000003f __SREG__
/var/folders/t1/hcvhy4kn4wqf61nvgxt8qfpc0000gn/T//cciQW3dI.s:5      *ABS*:0000000000000000 __tmp_reg__
/var/folders/t1/hcvhy4kn4wqf61nvgxt8qfpc0000gn/T//cciQW3dI.s:6      *ABS*:0000000000000001 __zero_reg__
/var/folders/t1/hcvhy4kn4wqf61nvgxt8qfpc0000gn/T//cciQW3dI.s:12     .text:0000000000000000 _Z24Timer_1_Compare_ISR_initv
/var/folders/t1/hcvhy4kn4wqf61nvgxt8qfpc0000gn/T//cciQW3dI.s:15     .text:0000000000000000 .Loc.0
/var/folders/t1/hcvhy4kn4wqf61nvgxt8qfpc0000gn/T//cciQW3dI.s:16     .text:0000000000000000 L0
/var/folders/t1/hcvhy4kn4wqf61nvgxt8qfpc0000gn/T//cciQW3dI.s:21     .text:0000000000000000 .Loc.1
/var/folders/t1/hcvhy4kn4wqf61nvgxt8qfpc0000gn/T//cciQW3dI.s:22     .text:0000000000000000 .Loc.2
/var/folders/t1/hcvhy4kn4wqf61nvgxt8qfpc0000gn/T//cciQW3dI.s:25     .text:0000000000000004 .Loc.3
/var/folders/t1/hcvhy4kn4wqf61nvgxt8qfpc0000gn/T//cciQW3dI.s:26     .text:0000000000000004 .Loc.4
/var/folders/t1/hcvhy4kn4wqf61nvgxt8qfpc0000gn/T//cciQW3dI.s:31     .text:000000000000000c .Loc.5
/var/folders/t1/hcvhy4kn4wqf61nvgxt8qfpc0000gn/T//cciQW3dI.s:32     .text:000000000000000c .Loc.6
/var/folders/t1/hcvhy4kn4wqf61nvgxt8qfpc0000gn/T//cciQW3dI.s:35     .text:0000000000000010 .Loc.7
/var/folders/t1/hcvhy4kn4wqf61nvgxt8qfpc0000gn/T//cciQW3dI.s:36     .text:0000000000000010 .Loc.8
/var/folders/t1/hcvhy4kn4wqf61nvgxt8qfpc0000gn/T//cciQW3dI.s:39     .text:0000000000000014 .Loc.9
/var/folders/t1/hcvhy4kn4wqf61nvgxt8qfpc0000gn/T//cciQW3dI.s:40     .text:0000000000000014 .Loc.10
/var/folders/t1/hcvhy4kn4wqf61nvgxt8qfpc0000gn/T//cciQW3dI.s:43     .text:0000000000000018 .Loc.11
/var/folders/t1/hcvhy4kn4wqf61nvgxt8qfpc0000gn/T//cciQW3dI.s:44     .text:0000000000000018 .Loc.12
/var/folders/t1/hcvhy4kn4wqf61nvgxt8qfpc0000gn/T//cciQW3dI.s:49     .text:000000000000001a .Loc.13
/var/folders/t1/hcvhy4kn4wqf61nvgxt8qfpc0000gn/T//cciQW3dI.s:52     .text:000000000000001a .Loc.14
/var/folders/t1/hcvhy4kn4wqf61nvgxt8qfpc0000gn/T//cciQW3dI.s:54     .text:000000000000001c L0
/var/folders/t1/hcvhy4kn4wqf61nvgxt8qfpc0000gn/T//cciQW3dI.s:63     .text.startup:0000000000000000 main
/var/folders/t1/hcvhy4kn4wqf61nvgxt8qfpc0000gn/T//cciQW3dI.s:65     .text.startup:0000000000000000 .Loc.15
/var/folders/t1/hcvhy4kn4wqf61nvgxt8qfpc0000gn/T//cciQW3dI.s:66     .text.startup:0000000000000000 L0
/var/folders/t1/hcvhy4kn4wqf61nvgxt8qfpc0000gn/T//cciQW3dI.s:84     .text.startup:0000000000000012 .Loc.16
/var/folders/t1/hcvhy4kn4wqf61nvgxt8qfpc0000gn/T//cciQW3dI.s:85     .text.startup:0000000000000012 .Loc.17
/var/folders/t1/hcvhy4kn4wqf61nvgxt8qfpc0000gn/T//cciQW3dI.s:88     .text.startup:0000000000000016 .Loc.18
/var/folders/t1/hcvhy4kn4wqf61nvgxt8qfpc0000gn/T//cciQW3dI.s:89     .text.startup:0000000000000016 .Loc.19
/var/folders/t1/hcvhy4kn4wqf61nvgxt8qfpc0000gn/T//cciQW3dI.s:91     .text.startup:0000000000000018 .Loc.20
/var/folders/t1/hcvhy4kn4wqf61nvgxt8qfpc0000gn/T//cciQW3dI.s:96     .text.startup:0000000000000018 .Loc.21
/var/folders/t1/hcvhy4kn4wqf61nvgxt8qfpc0000gn/T//cciQW3dI.s:98     .text.startup:0000000000000018 .Loc.22
/var/folders/t1/hcvhy4kn4wqf61nvgxt8qfpc0000gn/T//cciQW3dI.s:99     .text.startup:0000000000000018 .Loc.23
/var/folders/t1/hcvhy4kn4wqf61nvgxt8qfpc0000gn/T//cciQW3dI.s:100    .text.startup:0000000000000018 .Loc.24
/var/folders/t1/hcvhy4kn4wqf61nvgxt8qfpc0000gn/T//cciQW3dI.s:101    .text.startup:0000000000000018 .Loc.25
/var/folders/t1/hcvhy4kn4wqf61nvgxt8qfpc0000gn/T//cciQW3dI.s:102    .text.startup:0000000000000018 .Loc.26
/var/folders/t1/hcvhy4kn4wqf61nvgxt8qfpc0000gn/T//cciQW3dI.s:103    .text.startup:0000000000000018 .Loc.27
/var/folders/t1/hcvhy4kn4wqf61nvgxt8qfpc0000gn/T//cciQW3dI.s:104    .text.startup:0000000000000018 .Loc.28
/var/folders/t1/hcvhy4kn4wqf61nvgxt8qfpc0000gn/T//cciQW3dI.s:112    .text.startup:0000000000000028 L0
/var/folders/t1/hcvhy4kn4wqf61nvgxt8qfpc0000gn/T//cciQW3dI.s:115    .text.startup:000000000000002a .Loc.29
/var/folders/t1/hcvhy4kn4wqf61nvgxt8qfpc0000gn/T//cciQW3dI.s:118    .text.startup:000000000000002a .Loc.30
/var/folders/t1/hcvhy4kn4wqf61nvgxt8qfpc0000gn/T//cciQW3dI.s:119    .text.startup:000000000000002a .Loc.31
/var/folders/t1/hcvhy4kn4wqf61nvgxt8qfpc0000gn/T//cciQW3dI.s:121    .text.startup:000000000000002c .Loc.32
/var/folders/t1/hcvhy4kn4wqf61nvgxt8qfpc0000gn/T//cciQW3dI.s:122    .text.startup:000000000000002c .Loc.33
/var/folders/t1/hcvhy4kn4wqf61nvgxt8qfpc0000gn/T//cciQW3dI.s:128    .text.startup:0000000000000036 .Loc.34
/var/folders/t1/hcvhy4kn4wqf61nvgxt8qfpc0000gn/T//cciQW3dI.s:129    .text.startup:0000000000000036 .Loc.35
/var/folders/t1/hcvhy4kn4wqf61nvgxt8qfpc0000gn/T//cciQW3dI.s:143    .text.startup:0000000000000050 .Loc.36
/var/folders/t1/hcvhy4kn4wqf61nvgxt8qfpc0000gn/T//cciQW3dI.s:144    .text.startup:0000000000000050 .Loc.37
/var/folders/t1/hcvhy4kn4wqf61nvgxt8qfpc0000gn/T//cciQW3dI.s:148    .text.startup:0000000000000056 .Loc.38
/var/folders/t1/hcvhy4kn4wqf61nvgxt8qfpc0000gn/T//cciQW3dI.s:149    .text.startup:0000000000000056 .Loc.39
/var/folders/t1/hcvhy4kn4wqf61nvgxt8qfpc0000gn/T//cciQW3dI.s:150    .text.startup:0000000000000056 .Loc.40
/var/folders/t1/hcvhy4kn4wqf61nvgxt8qfpc0000gn/T//cciQW3dI.s:151    .text.startup:0000000000000056 .Loc.41
/var/folders/t1/hcvhy4kn4wqf61nvgxt8qfpc0000gn/T//cciQW3dI.s:160    .text.startup:0000000000000066 .Loc.42
/var/folders/t1/hcvhy4kn4wqf61nvgxt8qfpc0000gn/T//cciQW3dI.s:161    .text.startup:0000000000000066 .Loc.43
/var/folders/t1/hcvhy4kn4wqf61nvgxt8qfpc0000gn/T//cciQW3dI.s:173    .text.startup:000000000000007c .Loc.44
/var/folders/t1/hcvhy4kn4wqf61nvgxt8qfpc0000gn/T//cciQW3dI.s:174    .text.startup:000000000000007c .Loc.45
/var/folders/t1/hcvhy4kn4wqf61nvgxt8qfpc0000gn/T//cciQW3dI.s:181    .text.startup:0000000000000088 .Loc.46
/var/folders/t1/hcvhy4kn4wqf61nvgxt8qfpc0000gn/T//cciQW3dI.s:182    .text.startup:0000000000000088 .Loc.47
/var/folders/t1/hcvhy4kn4wqf61nvgxt8qfpc0000gn/T//cciQW3dI.s:183    .text.startup:0000000000000088 .Loc.48
/var/folders/t1/hcvhy4kn4wqf61nvgxt8qfpc0000gn/T//cciQW3dI.s:190    .text.startup:0000000000000094 .Loc.49
/var/folders/t1/hcvhy4kn4wqf61nvgxt8qfpc0000gn/T//cciQW3dI.s:191    .text.startup:0000000000000094 .Loc.50
/var/folders/t1/hcvhy4kn4wqf61nvgxt8qfpc0000gn/T//cciQW3dI.s:199    .text.startup:00000000000000a2 .Loc.51
/var/folders/t1/hcvhy4kn4wqf61nvgxt8qfpc0000gn/T//cciQW3dI.s:200    .text.startup:00000000000000a2 .Loc.52
/var/folders/t1/hcvhy4kn4wqf61nvgxt8qfpc0000gn/T//cciQW3dI.s:204    .text.startup:00000000000000a8 .Loc.53
/var/folders/t1/hcvhy4kn4wqf61nvgxt8qfpc0000gn/T//cciQW3dI.s:205    .text.startup:00000000000000a8 .Loc.54
/var/folders/t1/hcvhy4kn4wqf61nvgxt8qfpc0000gn/T//cciQW3dI.s:212    .text.startup:00000000000000b4 .Loc.55
/var/folders/t1/hcvhy4kn4wqf61nvgxt8qfpc0000gn/T//cciQW3dI.s:213    .text.startup:00000000000000b4 .Loc.56
/var/folders/t1/hcvhy4kn4wqf61nvgxt8qfpc0000gn/T//cciQW3dI.s:222    .text.startup:00000000000000c4 .Loc.57
/var/folders/t1/hcvhy4kn4wqf61nvgxt8qfpc0000gn/T//cciQW3dI.s:225    .text.startup:00000000000000c4 .Loc.58
/var/folders/t1/hcvhy4kn4wqf61nvgxt8qfpc0000gn/T//cciQW3dI.s:227    .text.startup:00000000000000c4 .Loc.59
/var/folders/t1/hcvhy4kn4wqf61nvgxt8qfpc0000gn/T//cciQW3dI.s:228    .text.startup:00000000000000c4 .Loc.60
/var/folders/t1/hcvhy4kn4wqf61nvgxt8qfpc0000gn/T//cciQW3dI.s:229    .text.startup:00000000000000c4 .Loc.61
/var/folders/t1/hcvhy4kn4wqf61nvgxt8qfpc0000gn/T//cciQW3dI.s:230    .text.startup:00000000000000c4 .Loc.62
/var/folders/t1/hcvhy4kn4wqf61nvgxt8qfpc0000gn/T//cciQW3dI.s:231    .text.startup:00000000000000c4 .Loc.63
/var/folders/t1/hcvhy4kn4wqf61nvgxt8qfpc0000gn/T//cciQW3dI.s:232    .text.startup:00000000000000c4 .Loc.64
/var/folders/t1/hcvhy4kn4wqf61nvgxt8qfpc0000gn/T//cciQW3dI.s:233    .text.startup:00000000000000c4 .Loc.65
/var/folders/t1/hcvhy4kn4wqf61nvgxt8qfpc0000gn/T//cciQW3dI.s:241    .text.startup:00000000000000d4 L0
/var/folders/t1/hcvhy4kn4wqf61nvgxt8qfpc0000gn/T//cciQW3dI.s:244    .text.startup:00000000000000d6 .Loc.66
/var/folders/t1/hcvhy4kn4wqf61nvgxt8qfpc0000gn/T//cciQW3dI.s:247    .text.startup:00000000000000d6 .Loc.67
/var/folders/t1/hcvhy4kn4wqf61nvgxt8qfpc0000gn/T//cciQW3dI.s:248    .text.startup:00000000000000d6 .Loc.68
/var/folders/t1/hcvhy4kn4wqf61nvgxt8qfpc0000gn/T//cciQW3dI.s:251    .text.startup:00000000000000da .Loc.69
/var/folders/t1/hcvhy4kn4wqf61nvgxt8qfpc0000gn/T//cciQW3dI.s:252    .text.startup:00000000000000da .Loc.70
/var/folders/t1/hcvhy4kn4wqf61nvgxt8qfpc0000gn/T//cciQW3dI.s:253    .text.startup:00000000000000da .Loc.71
/var/folders/t1/hcvhy4kn4wqf61nvgxt8qfpc0000gn/T//cciQW3dI.s:258    .text.startup:00000000000000de .Loc.72
/var/folders/t1/hcvhy4kn4wqf61nvgxt8qfpc0000gn/T//cciQW3dI.s:262    .text.startup:00000000000000e0 .Loc.73
/var/folders/t1/hcvhy4kn4wqf61nvgxt8qfpc0000gn/T//cciQW3dI.s:263    .text.startup:00000000000000e0 .Loc.74
/var/folders/t1/hcvhy4kn4wqf61nvgxt8qfpc0000gn/T//cciQW3dI.s:264    .text.startup:00000000000000e0 .Loc.75
/var/folders/t1/hcvhy4kn4wqf61nvgxt8qfpc0000gn/T//cciQW3dI.s:482    .bss:0000000000000000 flag_100ms
/var/folders/t1/hcvhy4kn4wqf61nvgxt8qfpc0000gn/T//cciQW3dI.s:266    .text.startup:00000000000000e4 .Loc.76
/var/folders/t1/hcvhy4kn4wqf61nvgxt8qfpc0000gn/T//cciQW3dI.s:269    .text.startup:00000000000000e8 .Loc.77
/var/folders/t1/hcvhy4kn4wqf61nvgxt8qfpc0000gn/T//cciQW3dI.s:270    .text.startup:00000000000000e8 .Loc.78
/var/folders/t1/hcvhy4kn4wqf61nvgxt8qfpc0000gn/T//cciQW3dI.s:275    .text.startup:00000000000000ea .Loc.79
/var/folders/t1/hcvhy4kn4wqf61nvgxt8qfpc0000gn/T//cciQW3dI.s:276    .text.startup:00000000000000ea .Loc.80
/var/folders/t1/hcvhy4kn4wqf61nvgxt8qfpc0000gn/T//cciQW3dI.s:492    .bss:0000000000000005 Zeitstempel
/var/folders/t1/hcvhy4kn4wqf61nvgxt8qfpc0000gn/T//cciQW3dI.s:282    .text.startup:00000000000000fa .Loc.81
/var/folders/t1/hcvhy4kn4wqf61nvgxt8qfpc0000gn/T//cciQW3dI.s:294    .text.startup:0000000000000112 .Loc.82
/var/folders/t1/hcvhy4kn4wqf61nvgxt8qfpc0000gn/T//cciQW3dI.s:487    .bss:0000000000000001 Zeitstempel_100ms
/var/folders/t1/hcvhy4kn4wqf61nvgxt8qfpc0000gn/T//cciQW3dI.s:299    .text.startup:0000000000000122 .Loc.83
/var/folders/t1/hcvhy4kn4wqf61nvgxt8qfpc0000gn/T//cciQW3dI.s:300    .text.startup:0000000000000122 .Loc.84
/var/folders/t1/hcvhy4kn4wqf61nvgxt8qfpc0000gn/T//cciQW3dI.s:305    .text.startup:0000000000000124 .Loc.85
/var/folders/t1/hcvhy4kn4wqf61nvgxt8qfpc0000gn/T//cciQW3dI.s:306    .text.startup:0000000000000124 .Loc.86
/var/folders/t1/hcvhy4kn4wqf61nvgxt8qfpc0000gn/T//cciQW3dI.s:310    .text.startup:0000000000000126 .Loc.87
/var/folders/t1/hcvhy4kn4wqf61nvgxt8qfpc0000gn/T//cciQW3dI.s:311    .text.startup:0000000000000126 .Loc.88
/var/folders/t1/hcvhy4kn4wqf61nvgxt8qfpc0000gn/T//cciQW3dI.s:313    .text.startup:000000000000012a .Loc.89
/var/folders/t1/hcvhy4kn4wqf61nvgxt8qfpc0000gn/T//cciQW3dI.s:314    .text.startup:000000000000012a .Loc.90
/var/folders/t1/hcvhy4kn4wqf61nvgxt8qfpc0000gn/T//cciQW3dI.s:329    .text.startup:0000000000000144 .Loc.91
/var/folders/t1/hcvhy4kn4wqf61nvgxt8qfpc0000gn/T//cciQW3dI.s:330    .text.startup:0000000000000144 .Loc.92
/var/folders/t1/hcvhy4kn4wqf61nvgxt8qfpc0000gn/T//cciQW3dI.s:337    .text.startup:0000000000000150 .Loc.93
/var/folders/t1/hcvhy4kn4wqf61nvgxt8qfpc0000gn/T//cciQW3dI.s:343    .text.startup:000000000000015a .Loc.94
/var/folders/t1/hcvhy4kn4wqf61nvgxt8qfpc0000gn/T//cciQW3dI.s:346    .text.startup:000000000000015e .Loc.95
/var/folders/t1/hcvhy4kn4wqf61nvgxt8qfpc0000gn/T//cciQW3dI.s:347    .text.startup:000000000000015e .Loc.96
/var/folders/t1/hcvhy4kn4wqf61nvgxt8qfpc0000gn/T//cciQW3dI.s:374    .text.startup:0000000000000196 .Loc.97
/var/folders/t1/hcvhy4kn4wqf61nvgxt8qfpc0000gn/T//cciQW3dI.s:378    .text.startup:000000000000019c .Loc.98
/var/folders/t1/hcvhy4kn4wqf61nvgxt8qfpc0000gn/T//cciQW3dI.s:382    .text.startup:00000000000001a2 .Loc.99
/var/folders/t1/hcvhy4kn4wqf61nvgxt8qfpc0000gn/T//cciQW3dI.s:383    .text.startup:00000000000001a2 .Loc.100
/var/folders/t1/hcvhy4kn4wqf61nvgxt8qfpc0000gn/T//cciQW3dI.s:389    .text.startup:00000000000001ac .Loc.101
/var/folders/t1/hcvhy4kn4wqf61nvgxt8qfpc0000gn/T//cciQW3dI.s:390    .text.startup:00000000000001ac .Loc.102
/var/folders/t1/hcvhy4kn4wqf61nvgxt8qfpc0000gn/T//cciQW3dI.s:394    .text.startup:00000000000001ae .Loc.103
/var/folders/t1/hcvhy4kn4wqf61nvgxt8qfpc0000gn/T//cciQW3dI.s:395    .text.startup:00000000000001ae .Loc.104
/var/folders/t1/hcvhy4kn4wqf61nvgxt8qfpc0000gn/T//cciQW3dI.s:396    .text.startup:00000000000001ae .Loc.105
/var/folders/t1/hcvhy4kn4wqf61nvgxt8qfpc0000gn/T//cciQW3dI.s:417    .text.startup:00000000000001de L0
/var/folders/t1/hcvhy4kn4wqf61nvgxt8qfpc0000gn/T//cciQW3dI.s:423    .text:000000000000001c __vector_7
/var/folders/t1/hcvhy4kn4wqf61nvgxt8qfpc0000gn/T//cciQW3dI.s:425    .text:000000000000001c .Loc.106
/var/folders/t1/hcvhy4kn4wqf61nvgxt8qfpc0000gn/T//cciQW3dI.s:426    .text:000000000000001c L0
                            *ABS*:0000000000000003 __gcc_isr.n_pushed.001
/var/folders/t1/hcvhy4kn4wqf61nvgxt8qfpc0000gn/T//cciQW3dI.s:444    .text:000000000000002c .Loc.107
/var/folders/t1/hcvhy4kn4wqf61nvgxt8qfpc0000gn/T//cciQW3dI.s:445    .text:000000000000002c .Loc.108
/var/folders/t1/hcvhy4kn4wqf61nvgxt8qfpc0000gn/T//cciQW3dI.s:450    .text:000000000000003c .Loc.109
/var/folders/t1/hcvhy4kn4wqf61nvgxt8qfpc0000gn/T//cciQW3dI.s:454    .text:0000000000000042 .Loc.110
/var/folders/t1/hcvhy4kn4wqf61nvgxt8qfpc0000gn/T//cciQW3dI.s:459    .text:0000000000000052 .Loc.111
/var/folders/t1/hcvhy4kn4wqf61nvgxt8qfpc0000gn/T//cciQW3dI.s:460    .text:0000000000000052 .Loc.112
/var/folders/t1/hcvhy4kn4wqf61nvgxt8qfpc0000gn/T//cciQW3dI.s:463    .text:0000000000000058 .Loc.113
/var/folders/t1/hcvhy4kn4wqf61nvgxt8qfpc0000gn/T//cciQW3dI.s:468    .text:000000000000005e .Loc.114
/var/folders/t1/hcvhy4kn4wqf61nvgxt8qfpc0000gn/T//cciQW3dI.s:475    .text:000000000000006e L0
/var/folders/t1/hcvhy4kn4wqf61nvgxt8qfpc0000gn/T//cciQW3dI.s:503    .text:000000000000006e L0
/var/folders/t1/hcvhy4kn4wqf61nvgxt8qfpc0000gn/T//cciQW3dI.s:420    .text.startup:00000000000001de L0
                     .debug_frame:0000000000000000 L0
/var/folders/t1/hcvhy4kn4wqf61nvgxt8qfpc0000gn/T//cciQW3dI.s:108    .text.startup:000000000000001e .L11
/var/folders/t1/hcvhy4kn4wqf61nvgxt8qfpc0000gn/T//cciQW3dI.s:237    .text.startup:00000000000000ca .L12
/var/folders/t1/hcvhy4kn4wqf61nvgxt8qfpc0000gn/T//cciQW3dI.s:261    .text.startup:00000000000000e0 .L3
/var/folders/t1/hcvhy4kn4wqf61nvgxt8qfpc0000gn/T//cciQW3dI.s:393    .text.startup:00000000000001ae .L4
/var/folders/t1/hcvhy4kn4wqf61nvgxt8qfpc0000gn/T//cciQW3dI.s:373    .text.startup:0000000000000196 .L5
/var/folders/t1/hcvhy4kn4wqf61nvgxt8qfpc0000gn/T//cciQW3dI.s:257    .text.startup:00000000000000de .L7
/var/folders/t1/hcvhy4kn4wqf61nvgxt8qfpc0000gn/T//cciQW3dI.s:367    .text.startup:000000000000018c .L11
/var/folders/t1/hcvhy4kn4wqf61nvgxt8qfpc0000gn/T//cciQW3dI.s:1579   .debug_abbrev:0000000000000000 .Ldebug_abbrev0
/var/folders/t1/hcvhy4kn4wqf61nvgxt8qfpc0000gn/T//cciQW3dI.s:2524   .debug_ranges:0000000000000000 .Ldebug_ranges0
/var/folders/t1/hcvhy4kn4wqf61nvgxt8qfpc0000gn/T//cciQW3dI.s:2532   .debug_line:0000000000000000 .Ldebug_line0
/var/folders/t1/hcvhy4kn4wqf61nvgxt8qfpc0000gn/T//cciQW3dI.s:424    .text:000000000000001c .LFB14
/var/folders/t1/hcvhy4kn4wqf61nvgxt8qfpc0000gn/T//cciQW3dI.s:476    .text:000000000000006e .LFE14
/var/folders/t1/hcvhy4kn4wqf61nvgxt8qfpc0000gn/T//cciQW3dI.s:2339   .debug_loc:0000000000000000 .LLST9
/var/folders/t1/hcvhy4kn4wqf61nvgxt8qfpc0000gn/T//cciQW3dI.s:13     .text:0000000000000000 .LFB13
/var/folders/t1/hcvhy4kn4wqf61nvgxt8qfpc0000gn/T//cciQW3dI.s:55     .text:000000000000001c .LFE13
/var/folders/t1/hcvhy4kn4wqf61nvgxt8qfpc0000gn/T//cciQW3dI.s:64     .text.startup:0000000000000000 .LFB12
/var/folders/t1/hcvhy4kn4wqf61nvgxt8qfpc0000gn/T//cciQW3dI.s:418    .text.startup:00000000000001de .LFE12
/var/folders/t1/hcvhy4kn4wqf61nvgxt8qfpc0000gn/T//cciQW3dI.s:2366   .debug_loc:000000000000003c .LLST0
/var/folders/t1/hcvhy4kn4wqf61nvgxt8qfpc0000gn/T//cciQW3dI.s:2390   .debug_loc:000000000000006e .LLST1
/var/folders/t1/hcvhy4kn4wqf61nvgxt8qfpc0000gn/T//cciQW3dI.s:2385   .debug_loc:000000000000006a .LVUS1
/var/folders/t1/hcvhy4kn4wqf61nvgxt8qfpc0000gn/T//cciQW3dI.s:2416   .debug_loc:000000000000009a .LLST2
/var/folders/t1/hcvhy4kn4wqf61nvgxt8qfpc0000gn/T//cciQW3dI.s:2407   .debug_loc:0000000000000092 .LVUS2
/var/folders/t1/hcvhy4kn4wqf61nvgxt8qfpc0000gn/T//cciQW3dI.s:94     .text.startup:0000000000000018 .LBI6
/var/folders/t1/hcvhy4kn4wqf61nvgxt8qfpc0000gn/T//cciQW3dI.s:93     .text.startup:0000000000000018 .LBB6
/var/folders/t1/hcvhy4kn4wqf61nvgxt8qfpc0000gn/T//cciQW3dI.s:117    .text.startup:000000000000002a .LBE6
/var/folders/t1/hcvhy4kn4wqf61nvgxt8qfpc0000gn/T//cciQW3dI.s:2440   .debug_loc:00000000000000d2 .LLST3
/var/folders/t1/hcvhy4kn4wqf61nvgxt8qfpc0000gn/T//cciQW3dI.s:2437   .debug_loc:00000000000000d0 .LVUS3
/var/folders/t1/hcvhy4kn4wqf61nvgxt8qfpc0000gn/T//cciQW3dI.s:2452   .debug_loc:00000000000000ec .LLST4
/var/folders/t1/hcvhy4kn4wqf61nvgxt8qfpc0000gn/T//cciQW3dI.s:2449   .debug_loc:00000000000000ea .LVUS4
/var/folders/t1/hcvhy4kn4wqf61nvgxt8qfpc0000gn/T//cciQW3dI.s:2464   .debug_loc:0000000000000106 .LLST5
/var/folders/t1/hcvhy4kn4wqf61nvgxt8qfpc0000gn/T//cciQW3dI.s:2461   .debug_loc:0000000000000104 .LVUS5
/var/folders/t1/hcvhy4kn4wqf61nvgxt8qfpc0000gn/T//cciQW3dI.s:224    .text.startup:00000000000000c4 .LBI8
/var/folders/t1/hcvhy4kn4wqf61nvgxt8qfpc0000gn/T//cciQW3dI.s:223    .text.startup:00000000000000c4 .LBB8
/var/folders/t1/hcvhy4kn4wqf61nvgxt8qfpc0000gn/T//cciQW3dI.s:246    .text.startup:00000000000000d6 .LBE8
/var/folders/t1/hcvhy4kn4wqf61nvgxt8qfpc0000gn/T//cciQW3dI.s:2476   .debug_loc:0000000000000120 .LLST6
/var/folders/t1/hcvhy4kn4wqf61nvgxt8qfpc0000gn/T//cciQW3dI.s:2473   .debug_loc:000000000000011e .LVUS6
/var/folders/t1/hcvhy4kn4wqf61nvgxt8qfpc0000gn/T//cciQW3dI.s:2488   .debug_loc:000000000000013a .LLST7
/var/folders/t1/hcvhy4kn4wqf61nvgxt8qfpc0000gn/T//cciQW3dI.s:2485   .debug_loc:0000000000000138 .LVUS7
/var/folders/t1/hcvhy4kn4wqf61nvgxt8qfpc0000gn/T//cciQW3dI.s:2500   .debug_loc:0000000000000154 .LLST8
/var/folders/t1/hcvhy4kn4wqf61nvgxt8qfpc0000gn/T//cciQW3dI.s:2497   .debug_loc:0000000000000152 .LVUS8
/var/folders/t1/hcvhy4kn4wqf61nvgxt8qfpc0000gn/T//cciQW3dI.s:127    .text.startup:0000000000000036 .LVL2
/var/folders/t1/hcvhy4kn4wqf61nvgxt8qfpc0000gn/T//cciQW3dI.s:142    .text.startup:0000000000000050 .LVL3
/var/folders/t1/hcvhy4kn4wqf61nvgxt8qfpc0000gn/T//cciQW3dI.s:147    .text.startup:0000000000000056 .LVL4
/var/folders/t1/hcvhy4kn4wqf61nvgxt8qfpc0000gn/T//cciQW3dI.s:211    .text.startup:00000000000000b4 .LVL5
/var/folders/t1/hcvhy4kn4wqf61nvgxt8qfpc0000gn/T//cciQW3dI.s:221    .text.startup:00000000000000c4 .LVL6
/var/folders/t1/hcvhy4kn4wqf61nvgxt8qfpc0000gn/T//cciQW3dI.s:250    .text.startup:00000000000000da .LVL8
/var/folders/t1/hcvhy4kn4wqf61nvgxt8qfpc0000gn/T//cciQW3dI.s:320    .text.startup:0000000000000136 .LVL12
/var/folders/t1/hcvhy4kn4wqf61nvgxt8qfpc0000gn/T//cciQW3dI.s:326    .text.startup:0000000000000142 .LVL13
/var/folders/t1/hcvhy4kn4wqf61nvgxt8qfpc0000gn/T//cciQW3dI.s:336    .text.startup:0000000000000150 .LVL15
/var/folders/t1/hcvhy4kn4wqf61nvgxt8qfpc0000gn/T//cciQW3dI.s:372    .text.startup:0000000000000196 .LVL16
/var/folders/t1/hcvhy4kn4wqf61nvgxt8qfpc0000gn/T//cciQW3dI.s:388    .text.startup:00000000000001ac .LVL17
/var/folders/t1/hcvhy4kn4wqf61nvgxt8qfpc0000gn/T//cciQW3dI.s:429    .text:0000000000000028 .LCFI2
/var/folders/t1/hcvhy4kn4wqf61nvgxt8qfpc0000gn/T//cciQW3dI.s:433    .text:000000000000002a .LCFI3
/var/folders/t1/hcvhy4kn4wqf61nvgxt8qfpc0000gn/T//cciQW3dI.s:437    .text:000000000000002c .LCFI4
/var/folders/t1/hcvhy4kn4wqf61nvgxt8qfpc0000gn/T//cciQW3dI.s:69     .text.startup:0000000000000004 .LCFI0
/var/folders/t1/hcvhy4kn4wqf61nvgxt8qfpc0000gn/T//cciQW3dI.s:73     .text.startup:0000000000000008 .LCFI1
/var/folders/t1/hcvhy4kn4wqf61nvgxt8qfpc0000gn/T//cciQW3dI.s:256    .text.startup:00000000000000de .LVL9
/var/folders/t1/hcvhy4kn4wqf61nvgxt8qfpc0000gn/T//cciQW3dI.s:328    .text.startup:0000000000000144 .LVL14
/var/folders/t1/hcvhy4kn4wqf61nvgxt8qfpc0000gn/T//cciQW3dI.s:260    .text.startup:00000000000000e0 .LVL10
/var/folders/t1/hcvhy4kn4wqf61nvgxt8qfpc0000gn/T//cciQW3dI.s:392    .text.startup:00000000000001ae .LVL18
/var/folders/t1/hcvhy4kn4wqf61nvgxt8qfpc0000gn/T//cciQW3dI.s:92     .text.startup:0000000000000018 .LVL0
/var/folders/t1/hcvhy4kn4wqf61nvgxt8qfpc0000gn/T//cciQW3dI.s:114    .text.startup:000000000000002a .LVL1
/var/folders/t1/hcvhy4kn4wqf61nvgxt8qfpc0000gn/T//cciQW3dI.s:243    .text.startup:00000000000000d6 .LVL7
/var/folders/t1/hcvhy4kn4wqf61nvgxt8qfpc0000gn/T//cciQW3dI.s:504    .debug_info:0000000000000000 .Ldebug_info0
/var/folders/t1/hcvhy4kn4wqf61nvgxt8qfpc0000gn/T//cciQW3dI.s:8      .text:0000000000000000 .Ltext0
/var/folders/t1/hcvhy4kn4wqf61nvgxt8qfpc0000gn/T//cciQW3dI.s:495    .text:000000000000006e .Letext0

UNDEFINED SYMBOLS
_ZN17VoltageStatisticsC1Ev
_ZN5USARTC1Ehhhm
can_init
strcpy
_ZN5USART9UsartPutsEPc
__muluhisi3
_ZN17VoltageStatistics9readValueEh
_ZN17VoltageStatistics19convertMilliVoltageEj
_ZN17VoltageStatistics8addValueEj
_ZN17VoltageStatistics15sendCanMessagesEbP5can_tjm
_ZN17VoltageStatistics14showStatisticsEv
__do_copy_data
__do_clear_bss
